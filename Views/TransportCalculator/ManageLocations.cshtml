
@model DK1.Models.Cal.ManageLocationsViewModel
@{
    ViewBag.Title = "Manage Locations";
}

<div class="row">
    <div class="col-md-5">
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">Shto Lokacion të Ri</h5>
            </div>
            <div class="card-body">
                @using (Html.BeginForm("AddLocation", "TransportCalculator", FormMethod.Post, new { id = "addLocationForm" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group mb-3">
                        @Html.LabelFor(m => m.NewLocation.Name)
                        @Html.TextBoxFor(m => m.NewLocation.Name, new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(m => m.NewLocation.Name, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group mb-3">
                        @Html.LabelFor(m => m.NewLocation.Region)
                        @Html.TextBoxFor(m => m.NewLocation.Region, new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(m => m.NewLocation.Region, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group mb-3">
                        <label>Zgjidhni lokacionin në hartë:</label>
                        <div id="map" style="height: 300px; width: 100%; margin-bottom: 10px;"></div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(m => m.NewLocation.Latitude)
                                @Html.TextBoxFor(m => m.NewLocation.Latitude, new { @class = "form-control", type = "number", step = "0.000001", id = "Latitude", required = "required" })
                                @Html.ValidationMessageFor(m => m.NewLocation.Latitude, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(m => m.NewLocation.Longitude)
                                @Html.TextBoxFor(m => m.NewLocation.Longitude, new { @class = "form-control", type = "number", step = "0.000001", id = "Longitude", required = "required" })
                                @Html.ValidationMessageFor(m => m.NewLocation.Longitude, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-check mb-3">
                        @Html.CheckBoxFor(m => m.NewLocation.IsPopularDestination, new { @class = "form-check-input", id = "IsPopularDestination" })
                        @Html.LabelFor(m => m.NewLocation.IsPopularDestination, new { @class = "form-check-label" })
                    </div>

                    <div class="d-grid gap-2">
                        <button type="submit" class="btn btn-primary">Ruaj Lokacionin</button>
                    </div>
                }

                <div class="alert alert-info mt-3">
                    <i class="fas fa-info-circle"></i> Përdorni hartën për të zgjedhur koordinatat e lokacionit duke klikuar ose duke lëvizur shenjuesin.
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-7">
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">Lokacionet Aktuale</h5>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Region</th>
                                <th>Coordinates</th>
                                <th>Popular</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var location in Model.AllLocations)
                            {
                                <tr>
                                    <td>@location.Name</td>
                                    <td>@location.Region</td>
                                    <td>@location.Latitude.ToString("F4"), @location.Longitude.ToString("F4")</td>
                                    <td>
                                        @(location.IsPopularDestination
                                            ? Html.Raw("<span class='badge bg-success'>Yes</span>")
                                            : Html.Raw("<span class='badge bg-secondary'>No</span>"))
                                    </td>
                                    <td>
                                        <a href="@Url.Action("EditLocation", "TransportCalculator", new { id = location.Id })" class="btn btn-sm btn-warning">Edit</a>
                                        <a href="@Url.Action("DeleteLocation", "TransportCalculator", new { id = location.Id })" class="btn btn-sm btn-danger ms-1">Delete</a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <div class="mt-3">
            <a href="@Url.Action("Index", "TransportCalculator")" class="btn btn-outline-secondary">Back to Calculator</a>
        </div>
    </div>
</div>

<!-- Leaflet CSS -->
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />

<!-- Leaflet JS -->
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
@Scripts.Render("~/bundles/jqueryval")

<script>
    $(document).ready(function () {
        // Initialize map for Albania
        var map = L.map('map').setView([41.3275, 19.8187], 7);

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; OpenStreetMap contributors'
        }).addTo(map);

        var marker = L.marker([41.3275, 19.8187], { draggable: true }).addTo(map);

        // Update coordinates when marker is moved
        function updateCoordinates(latlng) {
            $('#Latitude').val(latlng.lat.toFixed(6));
            $('#Longitude').val(latlng.lng.toFixed(6));
        }

        // Initial coordinates
        updateCoordinates(marker.getLatLng());

        marker.on('dragend', function (e) {
            updateCoordinates(e.target.getLatLng());
        });

        map.on('click', function (e) {
            marker.setLatLng(e.latlng);
            updateCoordinates(e.latlng);
        });

        // Form validation on submit
        $('#addLocationForm').on('submit', function (e) {
            let lat = parseFloat($('#Latitude').val());
            let lng = parseFloat($('#Longitude').val());

            if (isNaN(lat) || lat < 39 || lat > 43) {
                alert("Latitude duhet të jetë midis 39° dhe 43° për Shqipërinë");
                e.preventDefault();
                return false;
            }

            if (isNaN(lng) || lng < 19 || lng > 21.5) {
                alert("Longitude duhet të jetë midis 19° dhe 21.5° për Shqipërinë");
                e.preventDefault();
                return false;
            }

            // If validation passes, form will be submitted normally
        });

        // Make sure the map is properly rendered
        setTimeout(function () {
            map.invalidateSize();
        }, 100);
    });
</script>
