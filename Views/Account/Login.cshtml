@using DK1.Models
@model LoginViewModel
@{
    ViewBag.Title = "Login";
}

<style>
    body {
        background-color: #f5fff5;
        color: #003300;
        font-family: 'Segoe UI', sans-serif;
        transition: all 0.4s ease;
    }

        body.dark-mode {
            background-color: #0f0f0f;
            color: #c0ffc0;
        }

    .btn-primary {
        background-color: #2e8b57;
        border-color: #2e8b57;
        color: white;
    }

    body.dark-mode .btn-primary {
        background-color: #006400;
        border-color: #004d00;
        color: white;
    }

    .form-control {
        border: 1px solid #2e8b57;
    }

    body.dark-mode .form-control {
        background-color: #1a1a1a;
        color: #c0ffc0;
        border: 1px solid #004d00;
    }

    hr {
        border-top: 1px solid #2e8b57;
    }

    body.dark-mode hr {
        border-top: 1px solid #006400;
    }
</style>

<div class="text-right" style="margin: 10px;">
    <button class="btn btn-outline-primary" id="themeToggle">
        <i class="bi bi-sun-fill d-none" id="sunIcon"></i>
        <i class="bi bi-moon-fill" id="moonIcon"></i>
    </button>
</div>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const body = document.body;
        const themeToggle = document.getElementById("themeToggle");
        const sunIcon = document.getElementById("sunIcon");
        const moonIcon = document.getElementById("moonIcon");

        function updateIcons() {
            if (body.classList.contains("dark-mode")) {
                sunIcon.classList.remove("d-none");
                moonIcon.classList.add("d-none");
            } else {
                sunIcon.classList.add("d-none");
                moonIcon.classList.remove("d-none");
            }
        }

        if (localStorage.getItem("theme") === "dark") {
            body.classList.add("dark-mode");
        }

        updateIcons();

        themeToggle.addEventListener("click", function () {
            body.classList.toggle("dark-mode");
            localStorage.setItem("theme", body.classList.contains("dark-mode") ? "dark" : "light");
            updateIcons();
        });
    });
</script>


<h2>@ViewBag.Title</h2>

<div class="row">
    <div class="col-md-6">
        <section id="loginForm">
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl ?? "" }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <h4>Përdor një llogari lokale për t'u identifikuar.</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(m => m.Email, new { @class = "col-md-3 control-label" })
                    <div class="col-md-9">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Password, new { @class = "col-md-3 control-label" })
                    <div class="col-md-9">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-3 col-md-9">
                        <div class="checkbox">
                            @Html.CheckBoxFor(m => m.RememberMe)
                            @Html.LabelFor(m => m.RememberMe)
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-3 col-md-9">
                        <input type="submit" value="Hyr" class="btn btn-primary" />
                    </div>
                </div>
                <p>
                    @Html.ActionLink("Regjistrohu si përdorues i ri", "Register", null, new { @class = "btn btn-link" })
                </p>
            }
        </section>
    </div>

    <div class="col-md-6">
        <section id="socialLoginForm">
            <h4>Hyr me një llogari sociale</h4>
            <hr />
            @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl ?? "" })
        </section>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
