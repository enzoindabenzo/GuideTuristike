@using DK1.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}
<h2>@ViewBag.Title</h2>
<div class="row">
    <div class="col-md-6">
        <section id="loginForm">
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl ?? "" }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <h4>Use a local account to log in.</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(m => m.Email, new { @class = "col-md-3 control-label" })
                    <div class="col-md-9">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Password, new { @class = "col-md-3 control-label" })
                    <div class="col-md-9">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-3 col-md-9">
                        <div class="checkbox">
                            @Html.CheckBoxFor(m => m.RememberMe)
                            @Html.LabelFor(m => m.RememberMe)
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-3 col-md-9">
                        <input type="submit" value="Log in" class="btn btn-primary" />
                    </div>
                </div>
                <p>
                    @Html.ActionLink("Register as a new user", "Register", null, new { @class = "btn btn-link" })
                </p>
                @* Enable this once you have account confirmation enabled for password reset functionality
                    <p>
                        @Html.ActionLink("Forgot your password?", "ForgotPassword", null, new { @class = "btn btn-link" })
                    </p>*@
            }
        </section>
    </div>
    <div class="col-md-6">
        <section id="socialLoginForm">
            <h4>Log in with a social account</h4>
            <hr />
            @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl ?? "" })
        </section>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        // More comprehensive session clearing
        function clearAllCookies() {
            // Clear all cookies for this domain
            document.cookie.split(';').forEach(function (cookie) {
                var name = cookie.split('=')[0].trim();
                // Clear for root path
                document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/';
                // Clear for current path
                document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=' + window.location.pathname;
                // Clear with domain specification
                document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/;domain=' + window.location.hostname;
            });

            // Clear sessionStorage and localStorage
            if (typeof (Storage) !== "undefined") {
                sessionStorage.clear();
                localStorage.clear();
            }
        }

        // Clear cookies on page load (fresh navigation)
        if (window.performance && window.performance.navigation.type === window.performance.navigation.TYPE_NAVIGATE) {
            clearAllCookies();
        }

        // Also clear cookies when external login buttons are clicked
        document.addEventListener('DOMContentLoaded', function () {
            var externalLoginForm = document.getElementById('externalLoginForm');
            if (externalLoginForm) {
                externalLoginForm.addEventListener('submit', function (e) {
                    console.log('External login form submitting with provider: ' + e.submitter.value);
                    // Clear cookies before starting OAuth flow
                    clearAllCookies();
                });
            }
        });
    </script>
}