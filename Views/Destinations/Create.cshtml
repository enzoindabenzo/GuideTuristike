@using DK1.Models
@model Destination
@{
    ViewBag.Title = "Shto Destinacion të Ri";
}

<style>
    :root {
        --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        --secondary-gradient: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
        --success-gradient: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
        --warning-gradient: linear-gradient(135deg, #fa709a 0%, #fee140 100%);
        --create-accent: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);
        --dark-color: #2c3e50;
        --light-color: #ffffff;
        --glass-bg: rgba(255, 255, 255, 0.25);
        --glass-border: rgba(255, 255, 255, 0.18);
        --shadow-heavy: 0 20px 60px rgba(0, 0, 0, 0.15);
        --border-radius: 20px;
        --transition: all 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
    }

    * {
        box-sizing: border-box;
    }

    body {
        background: linear-gradient(135deg, #11998e 0%, #38ef7d 50%, #667eea 100%);
        min-height: 100vh;
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
        position: relative;
        overflow-x: hidden;
    }

    body::before {
        content: '';
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background:
            radial-gradient(circle at 20% 50%, rgba(17, 153, 142, 0.3) 0%, transparent 50%),
            radial-gradient(circle at 80% 20%, rgba(56, 239, 125, 0.3) 0%, transparent 50%),
            radial-gradient(circle at 40% 80%, rgba(102, 126, 234, 0.3) 0%, transparent 50%);
        pointer-events: none;
        z-index: -1;
        animation: createGradientShift 15s ease infinite;
    }

    @@keyframes createGradientShift {
        0%, 100% { opacity: 0.8; transform: rotate(0deg); }
        50% { opacity: 1; transform: rotate(2deg); }
    }

    .container {
        max-width: 1000px;
        margin: 0 auto;
        padding: 2rem 1rem;
        position: relative;
        z-index: 1;
    }

    .form-container {
        background: var(--glass-bg);
        backdrop-filter: blur(25px);
        border: 1px solid var(--glass-border);
        border-radius: var(--border-radius);
        box-shadow: var(--shadow-heavy);
        overflow: hidden;
        position: relative;
        animation: createSlideUp 0.8s ease-out;
    }

    .form-container::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(56, 239, 125, 0.1), transparent);
        animation: createShimmer 4s infinite;
    }

    @@keyframes createSlideUp {
        from {
            opacity: 0;
            transform: translateY(60px) scale(0.98);
        }
        to {
            opacity: 1;
            transform: translateY(0) scale(1);
        }
    }

    @@keyframes createShimmer {
        0% { left: -100%; }
        100% { left: 100%; }
    }

    .form-header {
        background: var(--create-accent);
        color: white;
        padding: 3.5rem 3rem;
        position: relative;
        overflow: hidden;
        text-align: center;
    }

    .form-header::before {
        content: '✨';
        position: absolute;
        top: 20px;
        right: 30px;
        font-size: 2.5rem;
        opacity: 0.4;
        animation: createSparkle 3s ease-in-out infinite;
    }

    .form-header::after {
        content: '';
        position: absolute;
        bottom: -50%;
        left: 50%;
        width: 250px;
        height: 250px;
        background: rgba(255, 255, 255, 0.1);
        border-radius: 50%;
        transform: translateX(-50%);
        animation: createFloat 8s ease-in-out infinite;
    }

    @@keyframes createSparkle {
        0%, 100% { transform: scale(1) rotate(0deg); opacity: 0.4; }
        50% { transform: scale(1.3) rotate(180deg); opacity: 0.8; }
    }

    @@keyframes createFloat {
        0%, 100% { transform: translateX(-50%) translateY(0px) rotate(0deg); }
        50% { transform: translateX(-50%) translateY(-30px) rotate(180deg); }
    }

    .form-title {
        font-size: 3rem;
        font-weight: 900;
        margin: 0;
        text-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
        position: relative;
        z-index: 2;
        background: linear-gradient(45deg, #fff, #e8fff4);
        -webkit-text-fill-color: transparent;
    }


    .form-subtitle {
        font-size: 1.3rem;
        opacity: 0.95;
        margin: 1rem 0 0 0;
        font-weight: 300;
        position: relative;
        z-index: 2;
        background: rgba(255, 255, 255, 0.2);
        padding: 1rem 2rem;
        border-radius: 50px;
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.3);
        display: inline-block;
        margin-top: 1.5rem;
    }

    .create-badge {
        position: absolute;
        top: 30px;
        left: 30px;
        background: rgba(255, 255, 255, 0.9);
        color: #11998e;
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 700;
        text-transform: uppercase;
        letter-spacing: 1px;
        z-index: 3;
        animation: createPulse 2s infinite;
    }

    @@keyframes createPulse {
        0%, 100% { transform: scale(1); }
        50% { transform: scale(1.05); }
    }

    .form-body {
        padding: 3.5rem 3rem;
        background: rgba(255, 255, 255, 0.95);
        position: relative;
    }

    .form-grid {
        display: grid;
        gap: 2.5rem;
        max-width: 800px;
        margin: 0 auto;
    }

    .form-group {
        position: relative;
        animation: createFadeInUp 0.6s ease-out forwards;
        opacity: 0;
        transform: translateY(20px);
    }

    .form-group:nth-child(1) { animation-delay: 0.1s; }
    .form-group:nth-child(2) { animation-delay: 0.2s; }
    .form-group:nth-child(3) { animation-delay: 0.3s; }
    .form-group:nth-child(4) { animation-delay: 0.4s; }
    .form-group:nth-child(5) { animation-delay: 0.5s; }
    .form-group:nth-child(6) { animation-delay: 0.6s; }
    .form-group:nth-child(7) { animation-delay: 0.7s; }

    @@keyframes createFadeInUp {
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .form-label {
        font-weight: 700;
        color: var(--dark-color);
        margin-bottom: 0.8rem;
        font-size: 1rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .form-label::before {
        content: '➕';
        color: #11998e;
        font-size: 0.8rem;
        transition: var(--transition);
    }

    .form-group:focus-within .form-label::before {
        transform: rotate(90deg);
        color: #38ef7d;
    }

    .form-control-custom {
        width: 100%;
        border: 2px solid rgba(17, 153, 142, 0.2);
        border-radius: 15px;
        padding: 1.2rem 1.5rem;
        font-size: 1.1rem;
        font-weight: 500;
        transition: var(--transition);
        background: rgba(255, 255, 255, 0.9);
        backdrop-filter: blur(10px);
        position: relative;
        z-index: 1;
    }

    .form-control-custom:focus {
        outline: none;
        border-color: #11998e;
        box-shadow: 0 0 0 4px rgba(17, 153, 142, 0.2);
        background: rgba(255, 255, 255, 1);
        transform: translateY(-2px);
    }

    .form-control-custom::placeholder {
        color: #a0a9c0;
        font-style: italic;
    }

    textarea.form-control-custom {
        resize: vertical;
        min-height: 120px;
    }

    .expense-row {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 2rem;
    }

    .file-upload-container {
        position: relative;
        background: linear-gradient(135deg, #e8fff4 0%, #d4f4dd 100%);
        border: 2px dashed rgba(17, 153, 142, 0.3);
        border-radius: 15px;
        padding: 2rem;
        text-align: center;
        transition: var(--transition);
        cursor: pointer;
    }

    .file-upload-container:hover {
        border-color: #11998e;
        background: linear-gradient(135deg, #d4f4dd 0%, #b8e6c1 100%);
        transform: translateY(-2px);
    }

    .file-upload-container input[type="file"] {
        position: absolute;
        opacity: 0;
        width: 100%;
        height: 100%;
        cursor: pointer;
    }

    .file-upload-text {
        color: #11998e;
        font-weight: 600;
        font-size: 1.1rem;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
    }

    .file-upload-text::before {
        content: '📷';
        font-size: 1.5rem;
    }

    .validation-error {
        color: #e74c3c;
        font-size: 0.9rem;
        margin-top: 0.5rem;
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 0.3rem;
    }

    .validation-error::before {
        content: '';
        font-size: 0.8rem;
    }

    .alert {
        border-radius: 12px;
        padding: 1.2rem 1.5rem;
        margin-bottom: 2rem;
        border: none;
        box-shadow: 0 4px 15px rgba(231, 76, 60, 0.2);
        background: linear-gradient(135deg, #ffe8e8 0%, #ffd6d6 100%);
        color: #721c24;
        font-weight: 600;
    }

    .action-section {
        padding: 2.5rem 3rem;
        background: rgba(255, 255, 255, 0.9);
        border-top: 1px solid rgba(17, 153, 142, 0.1);
    }

    .action-buttons {
        display: flex;
        justify-content: space-between;
        gap: 2rem;
        max-width: 500px;
        margin: 0 auto;
    }

    .btn {
        padding: 1.3rem 2.5rem;
        border: none;
        border-radius: 50px;
        font-weight: 700;
        font-size: 1.1rem;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.7rem;
        transition: var(--transition);
        position: relative;
        overflow: hidden;
        cursor: pointer;
        text-transform: uppercase;
        letter-spacing: 0.8px;
        flex: 1;
        justify-content: center;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    }

    .btn::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
        transition: var(--transition);
    }

    .btn:hover::before {
        left: 100%;
    }

    .btn-submit {
        background: var(--create-accent);
        color: white;
        box-shadow: 0 6px 20px rgba(17, 153, 142, 0.4);
    }

    .btn-submit:hover {
        transform: translateY(-4px);
        box-shadow: 0 12px 35px rgba(17, 153, 142, 0.5);
        color: white;
    }

    .btn-back {
        background: rgba(255, 255, 255, 0.9);
        color: var(--dark-color);
        border: 2px solid rgba(108, 117, 125, 0.3);
        backdrop-filter: blur(10px);
        box-shadow: 0 4px 15px rgba(108, 117, 125, 0.2);
    }

    .btn-back:hover {
        background: rgba(255, 255, 255, 1);
        transform: translateY(-4px);
        box-shadow: 0 8px 25px rgba(108, 117, 125, 0.3);
        color: var(--dark-color);
    }

    @@media (max-width: 768px) {
        .form-title {
            font-size: 2.4rem;
        }

        .form-body, .form-header, .action-section {
            padding: 2rem 1.5rem;
        }

        .expense-row {
            grid-template-columns: 1fr;
            gap: 1.5rem;
        }

        .action-buttons {
            flex-direction: column;
        }

        .btn {
            width: 100%;
        }

        .create-badge {
            position: static;
            margin-bottom: 1rem;
        }
    }
</style>

<div class="container">
    <div class="form-container">
        <div class="form-header">
            <div class="create-badge">🆕 Krijim i Ri</div>
            <h1 class="form-title">@ViewBag.Title</h1>
            <p class="form-subtitle">Krijoni një destinacion të ri për platformën tuaj</p>
        </div>

        <div class="form-body">
            @using (Html.BeginForm("Create", "Destinations", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

                <div class="form-grid">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, "Emri i Destinacionit", new { @class = "form-label" })
                        @Html.TextBoxFor(model => model.Name, new
                        {
                            @class = "form-control form-control-custom",
                            placeholder = "P.sh. Durrësi, Saranda, Tirana..."
                        })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "validation-error" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Region, "Rajoni", new { @class = "form-label" })
                        @Html.TextBoxFor(model => model.Region, new
                        {
                            @class = "form-control form-control-custom",
                            placeholder = "P.sh. Qark Durrës, Vlorë, Tiranë..."
                        })
                        @Html.ValidationMessageFor(model => model.Region, "", new { @class = "validation-error" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CategoryId, "Kategoria", new { @class = "form-label" })
                        @Html.DropDownListFor(model => model.CategoryId, (SelectList)ViewBag.CategoryList, "🏷️ Zgjidh Kategorinë", new
                        {
                            @class = "form-control form-control-custom"
                        })
                        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "validation-error" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, "Përshkrimi", new { @class = "form-label" })
                        @Html.TextAreaFor(model => model.Description, new
                        {
                            @class = "form-control form-control-custom",
                            rows = 5,
                            placeholder = "Shkruani një përshkrim të detajuar të destinacionit..."
                        })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "validation-error" })
                    </div>

                    <div class="form-group">
                        <label class="form-label">Buxheti Ditor (ALL)</label>
                        <div class="expense-row">
                            <div>
                                @Html.LabelFor(model => model.MinDailyExpenseAL, "Minimumi", new { @class = "form-label" })
                                @Html.TextBoxFor(model => model.MinDailyExpenseAL, new
                                {
                                    @class = "form-control form-control-custom",
                                    placeholder = "2000",
                                    type = "number",
                                    step = "100",
                                    min = "0"
                                })
                                @Html.ValidationMessageFor(model => model.MinDailyExpenseAL, "", new { @class = "validation-error" })
                            </div>
                            <div>
                                @Html.LabelFor(model => model.MaxDailyExpenseAL, "Maksimumi", new { @class = "form-label" })
                                @Html.TextBoxFor(model => model.MaxDailyExpenseAL, new
                                {
                                    @class = "form-control form-control-custom",
                                    placeholder = "8000",
                                    type = "number",
                                    step = "100",
                                    min = "0"
                                })
                                @Html.ValidationMessageFor(model => model.MaxDailyExpenseAL, "", new { @class = "validation-error" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="form-label">Ngarko Foto</label>
                        <div class="file-upload-container">
                            <input type="file" name="imageFile" accept="image/*" />
                            <div class="file-upload-text">
                                Zgjidh një foto për destinacionin
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <div class="action-section">
            <div class="action-buttons">
                @Html.ActionLink("🔙 Kthehu", "Index", null, new { @class = "btn btn-back" })
                <button type="submit" class="btn btn-submit">💾 Ruaj Destinacionin</button>
            </div>
        </div>
    </div>
</div>

<script>
// Enhanced file upload interaction
document.addEventListener('DOMContentLoaded', function() {
    const fileInput = document.querySelector('input[type="file"]');
    const uploadContainer = document.querySelector('.file-upload-container');
    const uploadText = document.querySelector('.file-upload-text');

    if (fileInput && uploadContainer) {
        fileInput.addEventListener('change', function(e) {
            if (e.target.files.length > 0) {
                uploadText.innerHTML = '✅ ' + e.target.files[0].name;
                uploadContainer.style.borderColor = '#11998e';
                uploadContainer.style.background = 'linear-gradient(135deg, #d4f4dd 0%, #b8e6c1 100%)';
            } else {
                uploadText.innerHTML = '📷 Zgjidh një foto për destinacionin';
                uploadContainer.style.borderColor = 'rgba(17, 153, 142, 0.3)';
                uploadContainer.style.background = 'linear-gradient(135deg, #e8fff4 0%, #d4f4dd 100%)';
            }
        });

        // Drag and drop functionality
        uploadContainer.addEventListener('dragover', function(e) {
            e.preventDefault();
            uploadContainer.style.borderColor = '#11998e';
            uploadContainer.style.background = 'linear-gradient(135deg, #d4f4dd 0%, #b8e6c1 100%)';
        });

        uploadContainer.addEventListener('dragleave', function(e) {
            e.preventDefault();
            uploadContainer.style.borderColor = 'rgba(17, 153, 142, 0.3)';
            uploadContainer.style.background = 'linear-gradient(135deg, #e8fff4 0%, #d4f4dd 100%)';
        });

        uploadContainer.addEventListener('drop', function(e) {
            e.preventDefault();
            const files = e.dataTransfer.files;
            if (files.length > 0) {
                fileInput.files = files;
                uploadText.innerHTML = '✅ ' + files[0].name;
            }
        });
    }
});
</script>