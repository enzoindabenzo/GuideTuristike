@using DK1.Models
@model List<Reservation>
@{
    ViewBag.Title = ViewBag.Language == "en" ? "Manage Reservations" : "Menaxho Rezervimet";
    var lang = ViewBag.Language as string ?? "sq"; // default Shqip
}

@section Styles {
    <style>
        /* Filter Form Styling */
        .filter-form-container .card {
            border: 1px solid #e0e0e0;
            border-radius: 0.75rem;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
            background-color: #ffffff;
        }

        .filter-form-container .card-body {
            padding: 1.5rem;
        }

        .filter-form-container .form-label {
            font-weight: 500;
            color: #333;
            margin-bottom: 0.5rem;
        }

        .filter-form-container .form-select,
        .filter-form-container .form-control {
            border: 1px solid #d1d3e2;
            border-radius: 0.5rem;
            padding: 0.75rem;
            font-size: 0.95rem;
            background-color: #f9f9fb;
            transition: border-color 0.3s ease, box-shadow 0.3s ease;
        }

            .filter-form-container .form-select:focus,
            .filter-form-container .form-control:focus {
                border-color: #4e73df;
                box-shadow: 0 0 0 0.2rem rgba(78, 115, 223, 0.25);
                outline: none;
            }

        .filter-form-container .btn-primary {
            background-color: #4e73df;
            border: none;
            padding: 0.75rem 1.25rem;
            border-radius: 0.5rem;
            font-weight: 500;
            transition: background-color 0.3s ease, transform 0.1s ease;
        }

            .filter-form-container .btn-primary:hover {
                background-color: #375ab5;
                transform: translateY(-1px);
            }

        .filter-form-container .btn-outline-secondary {
            border-color: #858796;
            color: #858796;
            padding: 0.75rem 1.25rem;
            border-radius: 0.5rem;
            font-weight: 500;
            transition: background-color 0.3s ease, color 0.3s ease, transform 0.1s ease;
        }

            .filter-form-container .btn-outline-secondary:hover {
                background-color: #858796;
                color: #fff;
                transform: translateY(-1px);
            }

        /* Status badges */
        .status-badge {
            padding: 0.4rem 0.75rem;
            border-radius: 1rem;
            font-size: 0.85rem;
            font-weight: 500;
            transition: background-color 0.3s ease;
        }

        .status-pending {
            background-color: #fff8e1;
            color: #997404;
            border: 1px solid #ffeeba;
        }

        .status-approved {
            background-color: #e7f3fe;
            color: #0c5460;
            border: 1px solid #d1ecf1;
        }

        .status-rejected {
            background-color: #fdeded;
            color: #a94442;
            border: 1px solid #f5c6cb;
        }

        /* Table Styling */
        .table-container .card {
            border: 1px solid #e0e0e0;
            border-radius: 0.75rem;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
            background-color: #ffffff;
        }

        .table th {
            background-color: #f1f4f9;
            color: #333;
            font-weight: 600;
            font-size: 0.95rem;
            padding: 1rem;
            border-bottom: 1px solid #e0e0e0;
        }

        .table td {
            padding: 1rem;
            font-size: 0.95rem;
            color: #444;
            vertical-align: middle;
            border-bottom: 1px solid #e9ecef;
        }

        .table tbody tr:nth-child(odd) {
            background-color: #fafafa;
        }

        .table tbody tr:hover {
            background-color: #f1f4f9;
            transition: background-color 0.3s ease;
        }

        .table .text-muted {
            font-size: 0.85rem;
            color: #6c757d;
        }

        .action-buttons {
            white-space: nowrap;
        }

            .action-buttons .btn {
                padding: 0.5rem 0.75rem;
                font-size: 0.85rem;
                border-radius: 0.5rem;
                transition: all 0.3s ease;
            }

            .action-buttons .btn-success {
                background-color: #28a745;
                border-color: #28a745;
            }

                .action-buttons .btn-success:hover {
                    background-color: #218838;
                }

            .action-buttons .btn-outline-danger {
                color: #dc3545;
                border-color: #dc3545;
            }

                .action-buttons .btn-outline-danger:hover {
                    background-color: #dc3545;
                    color: #fff;
                }

            .action-buttons .btn-outline-warning {
                color: #ffc107;
                border-color: #ffc107;
            }

                .action-buttons .btn-outline-warning:hover {
                    background-color: #ffc107;
                    color: #fff;
                }

        .notes-preview {
            max-width: 200px;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
            color: #5a5c69;
        }

        /* New styles for payment info */
        .payment-info {
            font-size: 0.9rem;
            color: #444;
        }

        .payment-method {
            font-weight: 500;
            color: #007bff;
        }
    </style>
}

<div class="container py-4 py-lg-5">
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="text-primary mb-0">@(lang == "en" ? "Manage Reservations" : "Menaxho Rezervimet")</h2>
        <div class="d-flex gap-2">
            <span class="badge bg-warning text-dark">@(Model.Count(r => r.Status == "Pending")) @(lang == "en" ? "Pending" : "Në Pritje")</span>
            <span class="badge bg-success text-dark">@(Model.Count(r => r.Status == "Approved")) @(lang == "en" ? "Approved" : "Aprovuar")</span>
            <span class="badge bg-danger text-dark">@(Model.Count(r => r.Status == "Rejected")) @(lang == "en" ? "Rejected" : "Refuzuar")</span>
        </div>
    </div>

    <!-- Filter Form -->
    <div class="filter-form-container mb-4">
        @using (Html.BeginForm("ManageReservations", "Home", FormMethod.Get, new { @class = "mb-4" }))
        {
            <div class="card">
                <div class="card-body">
                    <div class="row g-3">
                        <div class="col-md-3">
                            <label for="status" class="form-label">@(lang == "en" ? "Status" : "Statusi")</label>
                            @Html.DropDownList("status", new SelectList(new[] {
                                new { Value = "", Text = lang == "en" ? "All" : "Të gjitha" },
                                new { Value = "Pending", Text = lang == "en" ? "Pending" : "Në Pritje" },
                                new { Value = "Approved", Text = lang == "en" ? "Approved" : "Aprovuar" },
                                new { Value = "Rejected", Text = lang == "en" ? "Rejected" : "Refuzuar" }
                            }, "Value", "Text", Request.QueryString["status"]), new { @class = "form-select" })
                        </div>
                        <div class="col-md-3">
                            <label for="destinationId" class="form-label">@(lang == "en" ? "Destination" : "Destinacioni")</label>
                            @Html.DropDownList("destinationId", (SelectList)ViewBag.DestinationList, lang == "en" ? "All Destinations" : "Të gjitha Destinacionet", new { @class = "form-select" })
                        </div>
                        <div class="col-md-3">
                            <label for="dateFrom" class="form-label">@(lang == "en" ? "From Date" : "Nga Data")</label>
                            @Html.TextBox("dateFrom", Request.QueryString["dateFrom"], new { @class = "form-control", type = "date" })
                        </div>
                        <div class="col-md-3">
                            <label for="dateTo" class="form-label">@(lang == "en" ? "To Date" : "Deri në Datë")</label>
                            @Html.TextBox("dateTo", Request.QueryString["dateTo"], new { @class = "form-control", type = "date" })
                        </div>
                    </div>
                    <div class="row mt-4">
                        <div class="col-12">
                            <button type="submit" class="btn btn-primary me-2">
                                <i class="bi bi-funnel me-1"></i>
                                @(lang == "en" ? "Filter" : "Filtro")
                            </button>
                            <a href="@Url.Action("ManageReservations", "Home", new { language = lang })" class="btn btn-outline-secondary">
                                <i class="bi bi-arrow-clockwise me-1"></i>
                                @(lang == "en" ? "Clear" : "Pastro")
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Reservations Table -->
    <div class="table-container">
        @if (!Model.Any())
        {
            <div class="alert alert-info text-center">
                <i class="bi bi-info-circle me-2"></i>
                @(lang == "en" ? "No reservations found." : "Nuk u gjetën rezervime.")
            </div>
        }
        else
        {
            <div class="card">
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-hover mb-0">
                            <thead>
                                <tr>
                                    <th scope="col">@(lang == "en" ? "ID" : "ID")</th>
                                    <th scope="col">@(lang == "en" ? "Destination" : "Destinacioni")</th>
                                    <th scope="col">@(lang == "en" ? "Customer" : "Klienti")</th>
                                    <th scope="col">@(lang == "en" ? "Contact" : "Kontakti")</th>
                                    <th scope="col">@(lang == "en" ? "Date" : "Data")</th>
                                    <th scope="col">@(lang == "en" ? "Details" : "Detajet")</th>
                                    <th scope="col">@(lang == "en" ? "Notes" : "Shënime")</th>
                                    <th scope="col">@(lang == "en" ? "Created At" : "Krijuar Më")</th>
                                    <th scope="col">@(lang == "en" ? "Total Cost" : "Kosto Totale")</th>
                                    <th scope="col">@(lang == "en" ? "Payment Method" : "Metoda e Pagesës")</th>
                                    <th scope="col">@(lang == "en" ? "Status" : "Statusi")</th>
                                    <th scope="col">@(lang == "en" ? "Actions" : "Veprimet")</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var reservation in Model)
                                {
                                    <tr>
                                        <td><strong>#@reservation.Id</strong></td>
                                        <td>
                                            <strong>@(reservation.Destination?.Name ?? "N/A")</strong>
                                        </td>
                                        <td>
                                            <div><strong>@reservation.UserName</strong></div>
                                        </td>
                                        <td>
                                            <div><small class="text-muted">@reservation.Email</small></div>
                                            @if (!string.IsNullOrEmpty(reservation.Phone))
                                            {
                                                <div><small class="text-muted">@reservation.Phone</small></div>
                                            }
                                            <div class="mt-1">
                                                <a href="mailto:@reservation.Email" class="btn btn-sm btn-outline-primary me-1">
                                                    <i class="bi bi-envelope"></i>
                                                </a>
                                                @if (!string.IsNullOrEmpty(reservation.Phone))
                                                {
                                                    <a href="tel:@reservation.Phone" class="btn btn-sm btn-outline-success">
                                                        <i class="bi bi-telephone"></i>
                                                    </a>
                                                }
                                            </div>
                                        </td>
                                        <td>
                                            <div><strong>@reservation.ReservationDate.ToString("MMM dd, yyyy")</strong></div>
                                            <small class="text-muted">@reservation.ReservationDate.ToString("dddd")</small>
                                        </td>
                                        <td>
                                            <div><i class="bi bi-people me-1"></i>@reservation.NumberOfPeople @(lang == "en" ? "people" : "persona")</div>
                                            @if (reservation.NumberOfDays > 0)
                                            {
                                                <div><i class="bi bi-calendar-range me-1"></i>@reservation.NumberOfDays @(lang == "en" ? "days" : "ditë")</div>
                                            }
                                        </td>
                                        <td>
                                            @if (!string.IsNullOrEmpty(reservation.Notes))
                                            {
                                                <span class="notes-preview" title="@reservation.Notes">@reservation.Notes</span>
                                            }
                                            else
                                            {
                                                <span class="text-muted">@(lang == "en" ? "No notes" : "Pa shënime")</span>
                                            }
                                        </td>
                                        <td>
                                            <div><strong>@reservation.CreatedAt.ToString("MMM dd, yyyy")</strong></div>
                                            <small class="text-muted">@reservation.CreatedAt.ToString("HH:mm")</small>
                                        </td>
                                        <td>
                                            <div class="payment-info">@reservation.TotalCost.ToString("N2") ALL</div>
                                        </td>
                                        <td>
                                            <div class="payment-info">
                                                <span class="payment-method">@(reservation.PaymentMethod ?? "N/A")</span>
                                            </div>
                                        </td>
                                        <td>
                                            @{
                                                string statusClass;
                                                switch (reservation.Status.ToLower())
                                                {
                                                    case "pending":
                                                        statusClass = "status-pending";
                                                        break;
                                                    case "approved":
                                                        statusClass = "status-approved";
                                                        break;
                                                    case "rejected":
                                                        statusClass = "status-rejected";
                                                        break;
                                                    default:
                                                        statusClass = "status-pending";
                                                        break;
                                                }

                                                string statusText;
                                                switch (reservation.Status)
                                                {
                                                    case "Pending":
                                                        statusText = lang == "en" ? "Pending" : "Në Pritje";
                                                        break;
                                                    case "Approved":
                                                        statusText = lang == "en" ? "Approved" : "Aprovuar";
                                                        break;
                                                    case "Rejected":
                                                        statusText = lang == "en" ? "Rejected" : "Refuzuar";
                                                        break;
                                                    default:
                                                        statusText = reservation.Status;
                                                        break;
                                                }
                                            }
                                            <span class="status-badge @statusClass">@statusText</span>
                                        </td>
                                        <td>
                                            <div class="action-buttons">
                                                @if (reservation.Status == "Pending")
                                                {
                                                    using (Html.BeginForm("UpdateReservationStatus", "Home", FormMethod.Post, new { @class = "d-inline" }))
                                                    {
                                                        @Html.AntiForgeryToken()
                                                        @Html.Hidden("id", reservation.Id)
                                                        @Html.Hidden("status", "Approved")
                                                        @Html.Hidden("language", lang)
                                                        <button type="submit" class="btn btn-sm btn-success me-1">
                                                            <i class="bi bi-check-circle me-1"></i>
                                                            @(lang == "en" ? "Approve" : "Aprovo")
                                                        </button>
                                                    }
                                                    using (Html.BeginForm("UpdateReservationStatus", "Home", FormMethod.Post, new { @class = "d-inline" }))
                                                    {
                                                        @Html.AntiForgeryToken()
                                                        @Html.Hidden("id", reservation.Id)
                                                        @Html.Hidden("status", "Rejected")
                                                        @Html.Hidden("language", lang)
                                                        <button type="submit" class="btn btn-sm btn-outline-danger me-1">
                                                            <i class="bi bi-x-circle me-1"></i>
                                                            @(lang == "en" ? "Reject" : "Refuzo")
                                                        </button>
                                                    }
                                                }
                                                else
                                                {
                                                    using (Html.BeginForm("UpdateReservationStatus", "Home", FormMethod.Post, new { @class = "d-inline" }))
                                                    {
                                                        @Html.AntiForgeryToken()
                                                        @Html.Hidden("id", reservation.Id)
                                                        @Html.Hidden("status", "Pending")
                                                        @Html.Hidden("language", lang)
                                                        <button type="submit" class="btn btn-sm btn-outline-warning me-1">
                                                            <i class="bi bi-arrow-clockwise me-1"></i>
                                                            @(lang == "en" ? "Reset" : "Rivendos")
                                                        </button>
                                                    }
                                                }

                                                @using (Html.BeginForm("DeleteReservation", "Home", FormMethod.Post, new { @class = "d-inline" }))
                                                {
                                                    @Html.AntiForgeryToken()
                                                    @Html.Hidden("id", reservation.Id)
                                                    @Html.Hidden("language", lang)
                                                    <button type="submit" class="btn btn-sm btn-outline-danger"
                                                            onclick="return confirm('@(lang == "en" ? "Are you sure you want to delete this reservation?" : "Jeni i sigurt që doni ta fshini këtë rezervim?")');">
                                                        <i class="bi bi-trash me-1"></i>
                                                        @(lang == "en" ? "Delete" : "Fshi")
                                                    </button>
                                                }
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <!-- Pagination would go here if needed -->
            <div class="mt-3">
                <small class="text-muted">
                    @(lang == "en" ? "Total reservations:" : "Rezervime gjithsej:") @Model.Count()
                </small>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        // Auto-submit filter form when selections change
        document.addEventListener('DOMContentLoaded', function() {
            const statusSelect = document.getElementById('status');
            const destinationSelect = document.getElementById('destinationId');

            if (statusSelect) {
                statusSelect.addEventListener('change', function() {
                    this.form.submit();
                });
            }

            if (destinationSelect) {
                destinationSelect.addEventListener('change', function() {
                    this.form.submit();
                });
            }
        });

        // Show success/error messages
        @if (TempData["SuccessMessage"] != null)
        {
            <text>
            setTimeout(function() {
                alert('@Html.Raw(HttpUtility.JavaScriptStringEncode(TempData["SuccessMessage"]?.ToString() ?? ""))');
            }, 100);
            </text>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <text>
            setTimeout(function() {
                alert('@Html.Raw(HttpUtility.JavaScriptStringEncode(TempData["ErrorMessage"]?.ToString() ?? ""))');
            }, 100);
            </text>
        }
    </script>
}