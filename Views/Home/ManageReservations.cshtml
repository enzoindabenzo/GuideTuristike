@using DK1.Models
@model List<Reservation>
@{
    ViewBag.Title = ViewBag.Language == "en" ? "Manage Reservations" : "Menaxho Rezervimet";
    var lang = ViewBag.Language as string ?? "sq"; // default Shqip
}

@section Styles {
    <style>
        /* Modern Root Variables */
        :root {
            --primary-color: #6366f1;
            --primary-dark: #4f46e5;
            --primary-light: #818cf8;
            --success-color: #10b981;
            --success-dark: #059669;
            --warning-color: #f59e0b;
            --warning-dark: #d97706;
            --danger-color: #ef4444;
            --danger-dark: #dc2626;
            --neutral-50: #f9fafb;
            --neutral-100: #f3f4f6;
            --neutral-200: #e5e7eb;
            --neutral-300: #d1d5db;
            --neutral-400: #9ca3af;
            --neutral-500: #6b7280;
            --neutral-600: #4b5563;
            --neutral-700: #374151;
            --neutral-800: #1f2937;
            --neutral-900: #111827;
            --glass-bg: rgba(255, 255, 255, 0.8);
            --glass-border: rgba(255, 255, 255, 0.2);
            --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
            --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
            --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
            --shadow-xl: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
            --radius-sm: 0.375rem;
            --radius-md: 0.5rem;
            --radius-lg: 0.75rem;
            --radius-xl: 1rem;
        }

        /* Advanced Animations */
        @@keyframes float {
            0%, 100% {
                transform: translateY(0px);
            }

            50% {
                transform: translateY(-6px);
            }
        }

        @@keyframes pulse {
            0%, 100% {
                opacity: 1;
            }

            50% {
                opacity: 0.5;
            }
        }

        @@keyframes shimmer {
            0% {
                background-position: -1000px 0;
            }

            100% {
                background-position: 1000px 0;
            }
        }

        @@keyframes slideInLeft {
            0% {
                transform: translateX(-100%);
                opacity: 0;
            }

            100% {
                transform: translateX(0);
                opacity: 1;
            }
        }

        @@keyframes slideInRight {
            0% {
                transform: translateX(100%);
                opacity: 0;
            }

            100% {
                transform: translateX(0);
                opacity: 1;
            }
        }

        @@keyframes fadeInUp {
            0% {
                transform: translateY(30px);
                opacity: 0;
            }

            100% {
                transform: translateY(0);
                opacity: 1;
            }
        }

        @@keyframes scaleIn {
            0% {
                transform: scale(0.9);
                opacity: 0;
            }

            100% {
                transform: scale(1);
                opacity: 1;
            }
        }

        @@keyframes rotateIn {
            0% {
                transform: rotate(-180deg) scale(0.5);
                opacity: 0;
            }

            100% {
                transform: rotate(0deg) scale(1);
                opacity: 1;
            }
        }

        @@keyframes glow {
            0%, 100% {
                box-shadow: 0 0 20px rgba(99, 102, 241, 0.3);
            }

            50% {
                box-shadow: 0 0 30px rgba(99, 102, 241, 0.6), 0 0 40px rgba(99, 102, 241, 0.4);
            }
        }

        @@keyframes gradientShift {
            0% {
                background-position: 0% 50%;
            }

            50% {
                background-position: 100% 50%;
            }

            100% {
                background-position: 0% 50%;
            }
        }

        @@keyframes morphBorder {
            0%, 100% {
                border-radius: 1rem;
            }

            25% {
                border-radius: 1.5rem 1rem 1.5rem 1rem;
            }

            50% {
                border-radius: 1.5rem;
            }

            75% {
                border-radius: 1rem 1.5rem 1rem 1.5rem;
            }
        }

        /* Container Enhancements with Advanced Effects */
        .container.py-4.py-lg-5 {
            background: linear-gradient(135deg, #f9fafb 0%, rgba(255, 255, 255, 0.9) 100%);
            min-height: 100vh;
            position: relative;
            animation: fadeInUp 0.8s ease-out;
        }

            .container.py-4.py-lg-5::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                height: 200px;
                background: linear-gradient(135deg, #6366f1 0%, #818cf8 50%, #10b981 100%);
                background-size: 300% 300%;
                animation: gradientShift 6s ease infinite;
                opacity: 0.05;
                border-radius: 0 0 2rem 2rem;
                z-index: -1;
            }

            .container.py-4.py-lg-5::after {
                content: '';
                position: absolute;
                top: 50px;
                right: 50px;
                width: 100px;
                height: 100px;
                background: linear-gradient(45deg, rgba(99, 102, 241, 0.1), rgba(16, 185, 129, 0.1));
                border-radius: 50%;
                animation: float 4s ease-in-out infinite;
                z-index: -1;
            }

        /* Header Styling with Enhanced Effects */
        .d-flex.justify-content-between.align-items-center.mb-4 {
            background: rgba(255, 255, 255, 0.8);
            backdrop-filter: blur(20px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 1rem;
            padding: 1.5rem 2rem;
            box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
            position: relative;
            overflow: hidden;
            animation: slideInLeft 0.8s ease-out;
        }

            .d-flex.justify-content-between.align-items-center.mb-4::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 2px;
                background: linear-gradient(90deg, #6366f1, #818cf8, #10b981);
                background-size: 200% 100%;
                animation: shimmer 3s linear infinite;
            }

            .d-flex.justify-content-between.align-items-center.mb-4::after {
                content: '';
                position: absolute;
                top: -50%;
                left: -50%;
                width: 200%;
                height: 200%;
                background: radial-gradient(circle, rgba(99, 102, 241, 0.03) 0%, transparent 70%);
                animation: rotateIn 2s ease-out;
                pointer-events: none;
            }

        .text-primary.mb-0 {
            background: linear-gradient(135deg, #6366f1, #818cf8, #10b981);
            background-size: 300% 300%;
            animation: gradientShift 4s ease infinite;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            font-weight: 700;
            font-size: 2rem;
            letter-spacing: -0.025em;
            position: relative;
        }

            .text-primary.mb-0::after {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                background: linear-gradient(135deg, #6366f1, #818cf8);
                opacity: 0;
                transition: opacity 0.3s ease;
                -webkit-background-clip: text;
                background-clip: text;
            }

            .text-primary.mb-0:hover::after {
                opacity: 0.3;
            }

        /* Modern Badge Styling with Enhanced Effects */
        .badge {
            padding: 0.5rem 1rem;
            border-radius: 2rem;
            font-weight: 600;
            font-size: 0.875rem;
            box-shadow: var(--shadow-sm);
            border: 1px solid transparent;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            position: relative;
            overflow: hidden;
            animation: scaleIn 0.5s ease-out;
        }

            .badge::before {
                content: '';
                position: absolute;
                top: 0;
                left: -100%;
                width: 100%;
                height: 100%;
                background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
                transition: left 0.6s ease;
            }

            .badge:hover::before {
                left: 100%;
            }

            .badge.bg-warning {
                background: linear-gradient(135deg, #f59e0b, #fbbf24) !important;
                color: white !important;
                border-color: rgba(251, 191, 36, 0.3);
                animation: glow 2s ease-in-out infinite alternate;
            }

            .badge.bg-success {
                background: linear-gradient(135deg, #10b981, #34d399) !important;
                color: white !important;
                border-color: rgba(52, 211, 153, 0.3);
            }

            .badge.bg-danger {
                background: linear-gradient(135deg, #ef4444, #f87171) !important;
                color: white !important;
                border-color: rgba(248, 113, 113, 0.3);
            }

            .badge:hover {
                transform: translateY(-2px) scale(1.05);
                box-shadow: var(--shadow-md);
                animation: float 1s ease-in-out infinite;
            }

        /* Filter Form Modern Styling with Advanced Effects */
        .filter-form-container .card {
            background: rgba(255, 255, 255, 0.8);
            backdrop-filter: blur(20px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 1rem;
            box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
            overflow: hidden;
            position: relative;
            animation: slideInRight 0.8s ease-out 0.2s both;
        }

            .filter-form-container .card::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background: linear-gradient(135deg, rgba(99, 102, 241, 0.03) 0%, rgba(16, 185, 129, 0.03) 100%);
                pointer-events: none;
                animation: pulse 4s ease-in-out infinite;
            }

        .filter-form-container .card-body {
            padding: 2rem;
            position: relative;
            z-index: 1;
        }

        .filter-form-container .form-label {
            font-weight: 600;
            color: #374151;
            margin-bottom: 0.75rem;
            font-size: 0.875rem;
            text-transform: uppercase;
            letter-spacing: 0.05em;
            position: relative;
        }

            .filter-form-container .form-label::after {
                content: '';
                position: absolute;
                bottom: -2px;
                left: 0;
                width: 20%;
                height: 2px;
                background: linear-gradient(90deg, #6366f1, #10b981);
                transition: width 0.3s ease;
            }

            .filter-form-container .form-label:hover::after {
                width: 100%;
            }

        .filter-form-container .form-select,
        .filter-form-container .form-control {
            border: 2px solid #e5e7eb;
            border-radius: 0.75rem;
            padding: 0.875rem 1rem;
            font-size: 0.95rem;
            background: rgba(255, 255, 255, 0.8);
            backdrop-filter: blur(10px);
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
            position: relative;
        }

            .filter-form-container .form-select:focus,
            .filter-form-container .form-control:focus {
                border-color: #6366f1;
                box-shadow: 0 0 0 4px rgba(99, 102, 241, 0.1), 0 0 20px rgba(99, 102, 241, 0.2);
                outline: none;
                transform: translateY(-1px) scale(1.02);
                background: rgba(255, 255, 255, 0.95);
                animation: glow 1s ease-in-out;
            }

        .filter-form-container .btn-primary {
            background: linear-gradient(135deg, #6366f1, #818cf8);
            border: none;
            padding: 0.875rem 2rem;
            border-radius: 0.75rem;
            font-weight: 600;
            font-size: 0.95rem;
            box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            position: relative;
            overflow: hidden;
        }

            .filter-form-container .btn-primary::before {
                content: '';
                position: absolute;
                top: 0;
                left: -100%;
                width: 100%;
                height: 100%;
                background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
                transition: left 0.5s;
            }

            .filter-form-container .btn-primary::after {
                content: '';
                position: absolute;
                top: 50%;
                left: 50%;
                width: 0;
                height: 0;
                background: rgba(255, 255, 255, 0.3);
                border-radius: 50%;
                transform: translate(-50%, -50%);
                transition: width 0.3s ease, height 0.3s ease;
            }

            .filter-form-container .btn-primary:hover {
                transform: translateY(-2px) scale(1.05);
                box-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
                animation: morphBorder 2s ease-in-out infinite;
            }

                .filter-form-container .btn-primary:hover::before {
                    left: 100%;
                }

                .filter-form-container .btn-primary:hover::after {
                    width: 300px;
                    height: 300px;
                }

        .filter-form-container .btn-outline-secondary {
            border: 2px solid #d1d5db;
            color: #6b7280;
            padding: 0.875rem 2rem;
            border-radius: 0.75rem;
            font-weight: 600;
            background: rgba(255, 255, 255, 0.5);
            backdrop-filter: blur(10px);
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            position: relative;
            overflow: hidden;
        }

            .filter-form-container .btn-outline-secondary::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background: linear-gradient(45deg, transparent, rgba(107, 114, 128, 0.1), transparent);
                transform: translateX(-100%);
                transition: transform 0.6s ease;
            }

            .filter-form-container .btn-outline-secondary:hover {
                background: #f3f4f6;
                border-color: #9ca3af;
                color: #374151;
                transform: translateY(-2px) scale(1.02);
                box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
            }

                .filter-form-container .btn-outline-secondary:hover::before {
                    transform: translateX(100%);
                }

        /* Status Badges with Enhanced Gradient Design and Effects */
        .status-badge {
            padding: 0.5rem 1rem;
            border-radius: 2rem;
            font-size: 0.8rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.05em;
            box-shadow: var(--shadow-sm);
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            border: 1px solid transparent;
            position: relative;
            overflow: hidden;
        }

            .status-badge::before {
                content: '';
                position: absolute;
                top: -50%;
                left: -50%;
                width: 200%;
                height: 200%;
                background: radial-gradient(circle, rgba(255, 255, 255, 0.2) 0%, transparent 70%);
                transform: scale(0);
                transition: transform 0.3s ease;
            }

            .status-badge:hover::before {
                transform: scale(1);
            }

        .status-pending {
            background: linear-gradient(135deg, #fef3c7, #fde68a);
            color: #92400e;
            border-color: rgba(251, 191, 36, 0.3);
            animation: pulse 2s ease-in-out infinite;
        }

        .status-approved {
            background: linear-gradient(135deg, #d1fae5, #a7f3d0);
            color: #065f46;
            border-color: rgba(52, 211, 153, 0.3);
        }

        .status-rejected {
            background: linear-gradient(135deg, #fee2e2, #fecaca);
            color: #991b1b;
            border-color: rgba(248, 113, 113, 0.3);
        }

        .status-badge:hover {
            transform: scale(1.1) rotateZ(2deg);
            box-shadow: var(--shadow-md);
            animation: float 1s ease-in-out infinite;
        }

        /* Table Container Modern Styling with Advanced Effects */
        .table-container .card {
            background: rgba(255, 255, 255, 0.8);
            backdrop-filter: blur(20px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 1rem;
            box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
            overflow: hidden;
            position: relative;
            animation: fadeInUp 0.8s ease-out 0.4s both;
        }

            .table-container .card::before {
                content: '';
                position: absolute;
                top: 0;
                left: -100%;
                width: 100%;
                height: 2px;
                background: linear-gradient(90deg, #6366f1, #818cf8, #10b981);
                animation: shimmer 3s linear infinite;
            }

        .table {
            margin-bottom: 0;
        }

            .table th {
                background: linear-gradient(135deg, #f9fafb, rgba(255, 255, 255, 0.9));
                color: #374151;
                font-weight: 700;
                font-size: 0.875rem;
                text-transform: uppercase;
                letter-spacing: 0.05em;
                padding: 1.25rem 1rem;
                border-bottom: 2px solid #e5e7eb;
                position: relative;
                overflow: hidden;
            }

                .table th::before {
                    content: '';
                    position: absolute;
                    top: 0;
                    left: -100%;
                    width: 100%;
                    height: 100%;
                    background: linear-gradient(90deg, transparent, rgba(99, 102, 241, 0.1), transparent);
                    transition: left 0.6s ease;
                }

                .table th:hover::before {
                    left: 100%;
                }

                .table th::after {
                    content: '';
                    position: absolute;
                    bottom: 0;
                    left: 0;
                    width: 100%;
                    height: 2px;
                    background: linear-gradient(90deg, #6366f1, #10b981);
                    opacity: 0.3;
                    transform: scaleX(0);
                    transition: transform 0.3s ease;
                }

                .table th:hover::after {
                    transform: scaleX(1);
                    opacity: 1;
                }

            .table td {
                padding: 1.25rem 1rem;
                font-size: 0.9rem;
                color: #6b7280;
                vertical-align: middle;
                border-bottom: 1px solid #e5e7eb;
                background: rgba(255, 255, 255, 0.5);
                transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
                position: relative;
            }

            .table tbody tr:nth-child(odd) td {
                background: rgba(249, 250, 251, 0.8);
            }

            .table tbody tr {
                position: relative;
            }

                .table tbody tr::before {
                    content: '';
                    position: absolute;
                    left: 0;
                    top: 0;
                    width: 3px;
                    height: 100%;
                    background: linear-gradient(135deg, #6366f1, #10b981);
                    transform: scaleY(0);
                    transition: transform 0.3s ease;
                }

                .table tbody tr:hover::before {
                    transform: scaleY(1);
                }

                .table tbody tr:hover td {
                    background: rgba(99, 102, 241, 0.05);
                    transform: translateX(5px);
                    box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
                }

            .table .text-muted {
                font-size: 0.8rem;
                color: #9ca3af;
            }

        /* Action Buttons Modern Design with Enhanced Effects */
        .action-buttons {
            white-space: nowrap;
        }

            .action-buttons .btn {
                padding: 0.5rem 1rem;
                font-size: 0.8rem;
                border-radius: 0.75rem;
                font-weight: 600;
                margin-right: 0.5rem;
                margin-bottom: 0.25rem;
                transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
                border-width: 2px;
                position: relative;
                overflow: hidden;
            }

                .action-buttons .btn::before {
                    content: '';
                    position: absolute;
                    top: 0;
                    left: -100%;
                    width: 100%;
                    height: 100%;
                    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
                    transition: left 0.5s;
                }

                .action-buttons .btn:hover::before {
                    left: 100%;
                }

                .action-buttons .btn::after {
                    content: '';
                    position: absolute;
                    top: 50%;
                    left: 50%;
                    width: 0;
                    height: 0;
                    border-radius: 50%;
                    background: rgba(255, 255, 255, 0.3);
                    transition: width 0.3s ease, height 0.3s ease;
                    transform: translate(-50%, -50%);
                }

                .action-buttons .btn:active::after {
                    width: 100px;
                    height: 100px;
                }

            .action-buttons .btn-success {
                background: linear-gradient(135deg, #10b981, #34d399);
                border-color: #10b981;
                box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
            }

                .action-buttons .btn-success:hover {
                    background: linear-gradient(135deg, #059669, #10b981);
                    transform: translateY(-2px) scale(1.05);
                    box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
                    animation: glow 1s ease-in-out;
                }

            .action-buttons .btn-outline-danger {
                color: #ef4444;
                border-color: #ef4444;
                background: rgba(239, 68, 68, 0.05);
            }

                .action-buttons .btn-outline-danger:hover {
                    background: #ef4444;
                    color: white;
                    transform: translateY(-2px) scale(1.05);
                    box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
                    animation: pulse 0.5s ease-out;
                }

            .action-buttons .btn-outline-warning {
                color: #f59e0b;
                border-color: #f59e0b;
                background: rgba(245, 158, 11, 0.05);
            }

                .action-buttons .btn-outline-warning:hover {
                    background: #f59e0b;
                    color: white;
                    transform: translateY(-2px) scale(1.05);
                    box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
                    animation: float 1s ease-in-out infinite;
                }

        /* Contact Button Enhancements with Advanced Effects */
        .btn-sm.btn-outline-primary,
        .btn-sm.btn-outline-success {
            border-radius: 50%;
            width: 2.5rem;
            height: 2.5rem;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            border-width: 2px;
            position: relative;
            overflow: hidden;
        }

            .btn-sm.btn-outline-primary::before,
            .btn-sm.btn-outline-success::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background: radial-gradient(circle, rgba(255, 255, 255, 0.2) 0%, transparent 70%);
                transform: scale(0);
                transition: transform 0.3s ease;
            }

            .btn-sm.btn-outline-primary:hover::before,
            .btn-sm.btn-outline-success:hover::before {
                transform: scale(1);
            }

            .btn-sm.btn-outline-primary:hover,
            .btn-sm.btn-outline-success:hover {
                transform: translateY(-2px) scale(1.1) rotate(5deg);
                box-shadow: var(--shadow-md);
                animation: float 1s ease-in-out infinite;
            }

        /* Notes Preview Enhancement with Effects */
        .notes-preview {
            max-width: 200px;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
            color: #6b7280;
            background: rgba(99, 102, 241, 0.05);
            padding: 0.5rem 0.75rem;
            border-radius: 0.5rem;
            border-left: 3px solid #6366f1;
            position: relative;
            transition: all 0.3s ease;
        }

            .notes-preview::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                width: 3px;
                height: 100%;
                background: linear-gradient(135deg, #6366f1, #818cf8);
                transform: scaleY(1);
                transition: transform 0.3s ease;
            }

            .notes-preview:hover {
                background: rgba(99, 102, 241, 0.1);
                transform: translateX(5px);
                box-shadow: 0 2px 4px rgba(99, 102, 241, 0.1);
            }

                .notes-preview:hover::before {
                    transform: scaleY(1.2);
                    background: linear-gradient(135deg, #6366f1, #818cf8, #10b981);
                }

        /* Payment Info Styling with Enhanced Effects */
        .payment-info {
            font-size: 0.9rem;
            color: #6b7280;
            font-weight: 600;
            transition: all 0.3s ease;
            position: relative;
        }

            .payment-info:hover {
                color: #4b5563;
                transform: scale(1.02);
            }

        .payment-method {
            font-weight: 700;
            background: linear-gradient(135deg, #6366f1, #818cf8, #10b981);
            background-size: 300% 300%;
            animation: gradientShift 4s ease infinite;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            text-transform: uppercase;
            letter-spacing: 0.025em;
            position: relative;
        }

            .payment-method::after {
                content: '';
                position: absolute;
                bottom: -2px;
                left: 0;
                width: 100%;
                height: 2px;
                background: linear-gradient(90deg, #6366f1, #10b981);
                transform: scaleX(0);
                transition: transform 0.3s ease;
            }

            .payment-method:hover::after {
                transform: scaleX(1);
            }

        /* Alert Enhancements with Advanced Effects */
        .alert {
            border: none;
            border-radius: 0.75rem;
            padding: 1rem 1.5rem;
            box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
            backdrop-filter: blur(10px);
            position: relative;
            overflow: hidden;
            animation: slideInRight 0.6s ease-out;
        }

            .alert::before {
                content: '';
                position: absolute;
                top: 0;
                left: -100%;
                width: 100%;
                height: 100%;
                background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
                animation: shimmer 2s linear infinite;
            }

        .alert-success {
            background: linear-gradient(135deg, rgba(16, 185, 129, 0.1), rgba(52, 211, 153, 0.1));
            color: #059669;
            border-left: 4px solid #10b981;
            animation: glow 3s ease-in-out infinite alternate;
        }

        .alert-danger {
            background: linear-gradient(135deg, rgba(239, 68, 68, 0.1), rgba(248, 113, 113, 0.1));
            color: #dc2626;
            border-left: 4px solid #ef4444;
        }

        .alert-info {
            background: linear-gradient(135deg, rgba(99, 102, 241, 0.1), rgba(129, 140, 248, 0.1));
            color: #4f46e5;
            border-left: 4px solid #6366f1;
        }

        .alert:hover {
            transform: translateX(5px) scale(1.02);
            box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
        }

        /* Responsive Enhancements with Staggered Animations */
        @@media (max-width: 768px) {
            .container::before {
                height: 150px;
            }

            .text-primary {
                font-size: 1.5rem;
            }

            .d-flex.justify-content-between.align-items-center.mb-4 {
                padding: 1rem 1.5rem;
                flex-direction: column;
                gap: 1rem;
                text-align: center;
                animation: fadeInUp 0.8s ease-out;
            }

            .filter-form-container .card-body {
                padding: 1.5rem;
            }

            .action-buttons .btn {
                font-size: 0.75rem;
                padding: 0.4rem 0.8rem;
                margin-bottom: 0.5rem;
            }

            .table-responsive {
                border-radius: var(--radius-lg);
                box-shadow: var(--shadow-sm);
            }
            /* Staggered mobile animations */
            .badge:nth-child(1) {
                animation-delay: 0.1s;
            }

            .badge:nth-child(2) {
                animation-delay: 0.2s;
            }

            .badge:nth-child(3) {
                animation-delay: 0.3s;
            }

            .action-buttons .btn:nth-child(1) {
                animation-delay: 0.1s;
            }

            .action-buttons .btn:nth-child(2) {
                animation-delay: 0.2s;
            }

            .action-buttons .btn:nth-child(3) {
                animation-delay: 0.3s;
            }
        }

        /* Advanced Loading Animations */
        @@keyframes skeletonLoading {
            0% {
                background-position: -468px 0;
            }

            100% {
                background-position: 468px 0;
            }
        }

        @@keyframes ripple {
            0% {
                transform: scale(0);
                opacity: 1;
            }

            100% {
                transform: scale(4);
                opacity: 0;
            }
        }

        /* Smooth Transitions for Interactive Elements with Enhanced Physics */
        * {
            transition: color 0.3s cubic-bezier(0.4, 0, 0.2, 1), background-color 0.3s cubic-bezier(0.4, 0, 0.2, 1), border-color 0.3s cubic-bezier(0.4, 0, 0.2, 1), box-shadow 0.3s cubic-bezier(0.4, 0, 0.2, 1), transform 0.3s cubic-bezier(0.4, 0, 0.2, 1), opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1), backdrop-filter 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }

            /* Enhanced Focus States for Accessibility */
            *:focus {
                outline: 2px solid var(--primary-color);
                outline-offset: 2px;
                animation: glow 0.6s ease-in-out;
            }

        /* Custom Scrollbar with Enhanced Design */
        .table-responsive::-webkit-scrollbar {
            height: 8px;
        }

        .table-responsive::-webkit-scrollbar-track {
            background: var(--neutral-100);
            border-radius: var(--radius-md);
            position: relative;
        }

            .table-responsive::-webkit-scrollbar-track::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background: linear-gradient(90deg, transparent, rgba(99, 102, 241, 0.1), transparent);
                animation: shimmer 3s linear infinite;
            }

        .table-responsive::-webkit-scrollbar-thumb {
            background: linear-gradient(135deg, var(--primary-color), var(--primary-light));
            border-radius: var(--radius-md);
            transition: all 0.3s ease;
        }

            .table-responsive::-webkit-scrollbar-thumb:hover {
                background: linear-gradient(135deg, var(--primary-dark), var(--primary-color));
                box-shadow: 0 0 10px rgba(99, 102, 241, 0.3);
            }

        /* Particle Effect Background */
        .container.py-4.py-lg-5::before {
            background-image: radial-gradient(circle at 20% 20%, rgba(99, 102, 241, 0.1) 0%, transparent 50%), radial-gradient(circle at 80% 80%, rgba(16, 185, 129, 0.1) 0%, transparent 50%), radial-gradient(circle at 40% 60%, rgba(129, 140, 248, 0.05) 0%, transparent 50%);
        }

        /* Interactive Card Hover Effects */
        .card {
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }

            .card:hover {
                transform: translateY(-5px);
                box-shadow: 0 25px 50px -12px rgb(0 0 0 / 0.25);
            }

        /* Advanced Button Click Effects */
        .btn:active {
            transform: scale(0.95);
            transition: transform 0.1s ease;
        }

        /* Text Glow Effects */
        h1, h2, h3, h4, h5, h6 {
            transition: all 0.3s ease;
        }

            h1:hover, h2:hover, h3:hover, h4:hover, h5:hover, h6:hover {
                text-shadow: 0 0 10px rgba(99, 102, 241, 0.3);
            }

        /* Form Animation Enhancements */
        .form-control:not(:placeholder-shown) {
            animation: scaleIn 0.3s ease-out;
        }

        /* Staggered List Animations */
        .table tbody tr {
            animation: fadeInUp 0.6s ease-out both;
        }

            .table tbody tr:nth-child(1) {
                animation-delay: 0.1s;
            }

            .table tbody tr:nth-child(2) {
                animation-delay: 0.2s;
            }

            .table tbody tr:nth-child(3) {
                animation-delay: 0.3s;
            }

            .table tbody tr:nth-child(4) {
                animation-delay: 0.4s;
            }

            .table tbody tr:nth-child(5) {
                animation-delay: 0.5s;
            }

            .table tbody tr:nth-child(n+6) {
                animation-delay: 0.6s;
            }

        /* Micro-interactions for Better UX */
        .clickable {
            cursor: pointer;
            transition: all 0.2s ease;
        }

            .clickable:hover {
                transform: scale(1.02);
            }

            .clickable:active {
                transform: scale(0.98);
            }

        /* Enhanced Loading States */
        .loading {
            position: relative;
            overflow: hidden;
        }

            .loading::after {
                content: '';
                position: absolute;
                top: 0;
                left: -100%;
                width: 100%;
                height: 100%;
                background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
                animation: shimmer 1.5s infinite;
            }

        /* Floating Action Animations */
        .floating {
            animation: float 3s ease-in-out infinite;
        }

            .floating:nth-child(2n) {
                animation-delay: -1.5s;
            }

        /* Glass Morphism Enhanced */
        .glass-enhanced {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(20px) saturate(180%);
            border: 1px solid rgba(255, 255, 255, 0.2);
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }

        /* Neon Glow Effects */
        .neon-glow {
            animation: glow 2s ease-in-out infinite alternate;
        }

        /* Advanced Hover States */
        .interactive-element {
            position: relative;
            overflow: hidden;
        }

            .interactive-element::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background: radial-gradient(circle, rgba(99, 102, 241, 0.1) 0%, transparent 70%);
                transform: scale(0);
                transition: transform 0.3s ease;
            }

            .interactive-element:hover::before {
                transform: scale(1);
            }
    </style>
}

<div class="container py-4 py-lg-5">
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="text-primary mb-0">@(lang == "en" ? "Manage Reservations" : "Menaxho Rezervimet")</h2>
        <div class="d-flex gap-2">
            <span class="badge bg-warning text-dark">@(Model.Count(r => r.Status == "Pending")) @(lang == "en" ? "Pending" : "Në Pritje")</span>
            <span class="badge bg-success text-dark">@(Model.Count(r => r.Status == "Approved")) @(lang == "en" ? "Approved" : "Aprovuar")</span>
            <span class="badge bg-danger text-dark">@(Model.Count(r => r.Status == "Rejected")) @(lang == "en" ? "Rejected" : "Refuzuar")</span>
        </div>
    </div>

    <!-- Filter Form -->
    <div class="filter-form-container mb-4">
        @using (Html.BeginForm("ManageReservations", "Home", FormMethod.Get, new { @class = "mb-4" }))
        {
            <div class="card">
                <div class="card-body">
                    <div class="row g-3">
                        <div class="col-md-3">
                            <label for="status" class="form-label">@(lang == "en" ? "Status" : "Statusi")</label>
                            @Html.DropDownList("status", new SelectList(new[] {
                                new { Value = "", Text = lang == "en" ? "All" : "Të gjitha" },
                                new { Value = "Pending", Text = lang == "en" ? "Pending" : "Në Pritje" },
                                new { Value = "Approved", Text = lang == "en" ? "Approved" : "Aprovuar" },
                                new { Value = "Rejected", Text = lang == "en" ? "Rejected" : "Refuzuar" }
                            }, "Value", "Text", Request.QueryString["status"]), new { @class = "form-select" })
                        </div>
                        <div class="col-md-3">
                            <label for="destinationId" class="form-label">@(lang == "en" ? "Destination" : "Destinacioni")</label>
                            @Html.DropDownList("destinationId", (SelectList)ViewBag.DestinationList, lang == "en" ? "All Destinations" : "Të gjitha Destinacionet", new { @class = "form-select" })
                        </div>
                        <div class="col-md-3">
                            <label for="dateFrom" class="form-label">@(lang == "en" ? "Date" : "Data")</label>
                            @Html.TextBox("dateFrom", Request.QueryString["dateFrom"], new { @class = "form-control", type = "date" })
                        </div>
                    </div>
                    <div class="row mt-4">
                        <div class="col-12">
                            <button type="submit" class="btn btn-primary me-2">
                                <i class="bi bi-funnel me-1"></i>
                                @(lang == "en" ? "Filter" : "Filtro")
                            </button>
                            <a href="@Url.Action("ManageReservations", "Home", new { language = lang })" class="btn btn-outline-secondary">
                                <i class="bi bi-arrow-clockwise me-1"></i>
                                @(lang == "en" ? "Clear" : "Pastro")
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Reservations Table -->
    <div class="table-container">
        @if (!Model.Any())
        {
            <div class="alert alert-info text-center">
                <i class="bi bi-info-circle me-2"></i>
                @(lang == "en" ? "No reservations found." : "Nuk u gjetën rezervime.")
            </div>
        }
        else
        {
            <div class="card">
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-hover mb-0">
                            <thead>
                                <tr>
                                    <th scope="col">@(lang == "en" ? "ID" : "ID")</th>
                                    <th scope="col">@(lang == "en" ? "Destination" : "Destinacioni")</th>
                                    <th scope="col">@(lang == "en" ? "Customer" : "Klienti")</th>
                                    <th scope="col">@(lang == "en" ? "Contact" : "Kontakti")</th>
                                    <th scope="col">@(lang == "en" ? "Date" : "Data")</th>
                                    <th scope="col">@(lang == "en" ? "Details" : "Detajet")</th>
                                    <th scope="col">@(lang == "en" ? "Notes" : "Shënime")</th>
                                    <th scope="col">@(lang == "en" ? "Created At" : "Krijuar Më")</th>
                                    <th scope="col">@(lang == "en" ? "Total Cost" : "Kosto Totale")</th>
                                    <th scope="col">@(lang == "en" ? "Payment Method" : "Metoda e Pagesës")</th>
                                    <th scope="col">@(lang == "en" ? "Status" : "Statusi")</th>
                                    <th scope="col">@(lang == "en" ? "Actions" : "Veprimet")</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var reservation in Model)
                                {
                                    <tr>
                                        <td><strong>#@reservation.Id</strong></td>
                                        <td>
                                            <strong>@(reservation.Destination?.Name ?? "N/A")</strong>
                                        </td>
                                        <td>
                                            <div><strong>@reservation.UserName</strong></div>
                                        </td>
                                        <td>
                                            <div><small class="text-muted">@reservation.Email</small></div>
                                            @if (!string.IsNullOrEmpty(reservation.Phone))
                                            {
                                                <div><small class="text-muted">@reservation.Phone</small></div>
                                            }
                                            <div class="mt-1">
                                                <a href="mailto:@reservation.Email" class="btn btn-sm btn-outline-primary me-1">
                                                    <i class="bi bi-envelope"></i>
                                                </a>
                                                @if (!string.IsNullOrEmpty(reservation.Phone))
                                                {
                                                    <a href="tel:@reservation.Phone" class="btn btn-sm btn-outline-success">
                                                        <i class="bi bi-telephone"></i>
                                                    </a>
                                                }
                                            </div>
                                        </td>
                                        <td>
                                            <div><strong>@reservation.ReservationDate.ToString("MMM dd, yyyy")</strong></div>
                                            <small class="text-muted">@reservation.ReservationDate.ToString("dddd")</small>
                                        </td>
                                        <td>
                                            <div><i class="bi bi-people me-1"></i>@reservation.NumberOfPeople @(lang == "en" ? "people" : "persona")</div>
                                            @if (reservation.NumberOfDays > 0)
                                            {
                                                <div><i class="bi bi-calendar-range me-1"></i>@reservation.NumberOfDays @(lang == "en" ? "days" : "ditë")</div>
                                            }
                                        </td>
                                        <td>
                                            @if (!string.IsNullOrEmpty(reservation.Notes))
                                            {
                                                var truncatedNotes = reservation.Notes.Length > 50
                                                    ? reservation.Notes.Substring(0, 50) + "..."
                                                    : reservation.Notes;

                                                @truncatedNotes
                                            }
                                            else
                                            {
                                                @(lang == "en" ? "No notes" : "Pa shënime")
                                            }
                                        </td>
                                        <td>
                                            <div><strong>@reservation.CreatedAt.ToString("MMM dd, yyyy")</strong></div>
                                            <small class="text-muted">@reservation.CreatedAt.ToString("HH:mm")</small>
                                        </td>
                                        <td>
                                            <div class="payment-info">@reservation.TotalCost.ToString("N2") ALL</div>
                                        </td>
                                        <td>
                                            <div class="payment-info">
                                                <span class="payment-method">@(reservation.PaymentMethod ?? "N/A")</span>
                                            </div>
                                        </td>
                                        <td>
                                            @{
                                                string statusClass;
                                                switch (reservation.Status.ToLower())
                                                {
                                                    case "pending":
                                                        statusClass = "status-pending";
                                                        break;
                                                    case "approved":
                                                        statusClass = "status-approved";
                                                        break;
                                                    case "rejected":
                                                        statusClass = "status-rejected";
                                                        break;
                                                    default:
                                                        statusClass = "status-pending";
                                                        break;
                                                }

                                                string statusText;
                                                switch (reservation.Status)
                                                {
                                                    case "Pending":
                                                        statusText = lang == "en" ? "Pending" : "Në Pritje";
                                                        break;
                                                    case "Approved":
                                                        statusText = lang == "en" ? "Approved" : "Aprovuar";
                                                        break;
                                                    case "Rejected":
                                                        statusText = lang == "en" ? "Rejected" : "Refuzuar";
                                                        break;
                                                    default:
                                                        statusText = reservation.Status;
                                                        break;
                                                }
                                            }
                                            <span class="status-badge @statusClass">@statusText</span>
                                        </td>
                                        <td>
                                            <div class="action-buttons">
                                                @if (reservation.Status == "Pending")
                                                {
                                                    using (Html.BeginForm("UpdateReservationStatus", "Home", FormMethod.Post, new { @class = "d-inline" }))
                                                    {
                                                        @Html.AntiForgeryToken()
                                                        @Html.Hidden("id", reservation.Id)
                                                        @Html.Hidden("status", "Approved")
                                                        @Html.Hidden("language", lang)
                                                        <button type="submit" class="btn btn-sm btn-success me-1">
                                                            <i class="bi bi-check-circle me-1"></i>
                                                            @(lang == "en" ? "Approve" : "Aprovo")
                                                        </button>
                                                    }
                                                    using (Html.BeginForm("UpdateReservationStatus", "Home", FormMethod.Post, new { @class = "d-inline" }))
                                                    {
                                                        @Html.AntiForgeryToken()
                                                        @Html.Hidden("id", reservation.Id)
                                                        @Html.Hidden("status", "Rejected")
                                                        @Html.Hidden("language", lang)
                                                        <button type="submit" class="btn btn-sm btn-outline-danger me-1">
                                                            <i class="bi bi-x-circle me-1"></i>
                                                            @(lang == "en" ? "Reject" : "Refuzo")
                                                        </button>
                                                    }
                                                }
                                                else
                                                {
                                                    using (Html.BeginForm("UpdateReservationStatus", "Home", FormMethod.Post, new { @class = "d-inline" }))
                                                    {
                                                        @Html.AntiForgeryToken()
                                                        @Html.Hidden("id", reservation.Id)
                                                        @Html.Hidden("status", "Pending")
                                                        @Html.Hidden("language", lang)
                                                        <button type="submit" class="btn btn-sm btn-outline-warning me-1">
                                                            <i class="bi bi-arrow-clockwise me-1"></i>
                                                            @(lang == "en" ? "Reset" : "Rivendos")
                                                        </button>
                                                    }
                                                }

                                                @using (Html.BeginForm("DeleteReservation", "Home", FormMethod.Post, new { @class = "d-inline" }))
                                                {
                                                    @Html.AntiForgeryToken()
                                                    @Html.Hidden("id", reservation.Id)
                                                    @Html.Hidden("language", lang)
                                                    <button type="submit" class="btn btn-sm btn-outline-danger"
                                                            onclick="return confirm('@(lang == "en" ? "Are you sure you want to delete this reservation?" : "Jeni i sigurt që doni ta fshini këtë rezervim?")');">
                                                        <i class="bi bi-trash me-1"></i>
                                                        @(lang == "en" ? "Delete" : "Fshi")
                                                    </button>
                                                }
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <!-- Pagination would go here if needed -->
            <div class="mt-3">
                <small class="text-muted">
                    @(lang == "en" ? "Total reservations:" : "Rezervime gjithsej:") @Model.Count()
                </small>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        // Auto-submit filter form when selections change
        document.addEventListener('DOMContentLoaded', function() {
            const statusSelect = document.getElementById('status');
            const destinationSelect = document.getElementById('destinationId');

            if (statusSelect) {
                statusSelect.addEventListener('change', function() {
                    this.form.submit();
                });
            }

            if (destinationSelect) {
                destinationSelect.addEventListener('change', function() {
                    this.form.submit();
                });
            }

            // Initialize Bootstrap tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl)
            })
        });

        // Show success/error messages
        @if (TempData["SuccessMessage"] != null)
        {
            <text>
            setTimeout(function() {
                alert('@Html.Raw(HttpUtility.JavaScriptStringEncode(TempData["SuccessMessage"]?.ToString() ?? ""))');
            }, 100);
            </text>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <text>
            setTimeout(function() {
                alert('@Html.Raw(HttpUtility.JavaScriptStringEncode(TempData["ErrorMessage"]?.ToString() ?? ""))');
            }, 100);
            </text>
        }
    </script>
}