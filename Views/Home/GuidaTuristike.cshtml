@using DK1.Models
@model List<Destination>
@{
    ViewBag.Title = ViewBag.Language == "en" ? "Tourist Guide" : "Guida Turistike";
    var lang = ViewBag.Language as string ?? "sq"; // default Shqip
}

<!DOCTYPE html>
<html lang="@lang" data-bs-theme="light">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>@ViewBag.Title</title>
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css" />
    <style>
        #originMap, #destinationMap {
            visibility: hidden;
            height: 0;
        }

        :root {
            /* Modern Color Palette */
            --primary: #8b5cf6;
            --primary-dark: #7c3aed;
            --primary-light: #a78bfa;
            --secondary: #f59e0b;
            --accent: #06b6d4;
            --success: #10b981;
            --info: #3b82f6;
            --warning: #f59e0b;
            --danger: #ef4444;
            --light: #ffffff;
            --dark: #0f172a;
            --gray: #64748b;
            --gray-light: #cbd5e1;
            --gray-dark: #334155;

            /* Background Gradients */
            --light-bg: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            --dark-bg: linear-gradient(135deg, #0f0f23 0%, #1a1a2e 50%, #16213e 100%);

            /* Card Backgrounds */
            --light-card-bg: rgba(255, 255, 255, 0.95);
            --dark-card-bg: rgba(17, 24, 39, 0.95);

            /* Text Colors */
            --text-light: #f8fafc;
            --text-dark: #111827;
            --text-muted-light: #6b7280;
            --text-muted-dark: #9ca3af;

            /* Border Colors */
            --border-light: #e5e7eb;
            --border-dark: #374151;

            /* Glass Effects */
            --glassmorphism-light: rgba(255, 255, 255, 0.25);
            --glassmorphism-dark: rgba(255, 255, 255, 0.08);

            /* Shadows */
            --shadow-light: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
            --shadow-dark: 0 25px 50px -12px rgba(0, 0, 0, 0.6);
            --shadow-colored: 0 25px 50px -12px rgba(139, 92, 246, 0.3);
            --shadow-medium: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);

            /* Enhanced properties */
            --border-radius: 24px;
            --border-radius-large: 32px;
            --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }

        [data-bs-theme="light"] {
            --body-bg: linear-gradient(135deg, #f3f4f6 0%, #e5e7eb 50%, #d1d5db 100%);
            --card-bg: var(--light-card-bg);
            --text-color: var(--text-dark);
            --text-muted: var(--text-muted-light);
            --header-bg: rgba(255, 255, 255, 0.9);
            --border-color: var(--border-light);
            --expense-bg: linear-gradient(135deg, rgba(139, 92, 246, 0.1), rgba(59, 130, 246, 0.1));
            --expense-border: var(--primary);
            --shadow: var(--shadow-light);
            --surface-bg: rgba(248, 250, 252, 0.8);
            --glassmorphism: var(--glassmorphism-light);
        }

        [data-bs-theme="dark"] {
            --body-bg: linear-gradient(135deg, #0f0f23 0%, #1a1a2e 50%, #16213e 100%);
            --card-bg: var(--dark-card-bg);
            --text-color: var(--text-light);
            --text-muted: var(--text-muted-dark);
            --header-bg: rgba(26, 26, 26, 0.9);
            --border-color: var(--border-dark);
            --expense-bg: linear-gradient(135deg, rgba(139, 92, 246, 0.15), rgba(59, 130, 246, 0.1));
            --expense-border: var(--primary-light);
            --shadow: var(--shadow-dark);
            --surface-bg: rgba(30, 41, 59, 0.8);
            --glassmorphism: var(--glassmorphism-dark);
        }

        * {
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', 'SF Pro Display', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            font-feature-settings: 'cv02', 'cv03', 'cv04', 'cv11';
            background: var(--body-bg);
            background-attachment: fixed;
            color: var(--text-color);
            transition: var(--transition);
            line-height: 1.6;
            font-size: 16px;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
            min-height: 100vh;
            margin: 0;
            padding: 100px 0 0 0;
            position: relative;
        }

        body::before {
            content: '';
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background:
                radial-gradient(circle at 20% 80%, rgba(139, 92, 246, 0.15) 0%, transparent 50%),
                radial-gradient(circle at 80% 20%, rgba(59, 130, 246, 0.12) 0%, transparent 50%),
                radial-gradient(circle at 40% 40%, rgba(16, 185, 129, 0.08) 0%, transparent 50%);
            pointer-events: none;
            z-index: -1;
        }

        /* Fixed Theme Toggle */
        .d-flex.justify-content-end.mb-5 {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1100;
            margin-bottom: 0 !important;
            background: var(--glassmorphism);
            backdrop-filter: blur(12px);
            padding: 8px 12px;
            border-radius: 50px;
            border: 1px solid rgba(255, 255, 255, 0.1);
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }

        .container {
            position: relative;
            z-index: 1;
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 1rem;
        }

        .text-primary {
            background: linear-gradient(135deg, var(--primary) 0%, var(--accent) 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            font-weight: 700;
        }

        .bg-primary {
            background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%) !important;
        }

        /* Enhanced Button Styling */
        .btn {
            border-radius: 20px;
            font-weight: 600;
            font-size: 14px;
            padding: 12px 24px;
            transition: var(--transition);
            border: none;
            position: relative;
            overflow: hidden;
            text-transform: none;
            letter-spacing: 0.025em;
            backdrop-filter: blur(12px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.06);
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            justify-content: center;
        }

        .btn-primary {
            background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%);
            color: white;
            box-shadow: 0 10px 25px rgba(139, 92, 246, 0.3);
            border: 1px solid transparent;
        }

        .btn-primary:hover {
            background: linear-gradient(135deg, var(--primary-dark) 0%, var(--primary) 100%);
            transform: translateY(-2px);
            box-shadow: 0 15px 35px rgba(139, 92, 246, 0.4);
            color: white;
        }

        .btn-outline-primary {
            color: var(--primary);
            border: 2px solid var(--primary);
            background: var(--glassmorphism);
            backdrop-filter: blur(12px);
        }

        .btn-outline-primary:hover {
            background: linear-gradient(135deg, var(--primary) 0%, var(--primary-light) 100%);
            border-color: var(--primary);
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 15px 35px rgba(139, 92, 246, 0.4);
        }

        /* Enhanced Form Styling */
        form.form-inline {
            padding: 3rem;
            margin-bottom: 3rem;
            background: var(--glassmorphism);
            backdrop-filter: blur(24px);
            border-radius: var(--border-radius-large);
            border: 1px solid rgba(255, 255, 255, 0.08);
            box-shadow: var(--shadow);
            position: relative;
            overflow: hidden;
            display: flex;
            flex-wrap: wrap;
            align-items: center;
            gap: 1rem;
        }

        .form-group {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
            margin-bottom: 1rem;
        }

        .form-group label {
            font-weight: 600;
            color: var(--text-color);
            font-size: 0.9rem;
        }

        /* Modern Grid Layout */
        .destinations-row {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 2rem;
            padding-bottom: 2rem;
        }

        @@media (max-width: 768px) {
            .destinations-row {
                grid-template-columns: 1fr;
                gap: 1.5rem;
            }
        }

        /* Enhanced Card Design */
        .card {
            border: none;
            border-radius: var(--border-radius-large);
            overflow: hidden;
            transition: var(--transition);
            background: var(--glassmorphism);
            backdrop-filter: blur(24px);
            box-shadow: var(--shadow);
            position: relative;
            border: 1px solid rgba(255, 255, 255, 0.08);
            margin-bottom: 2rem;
            cursor: pointer;
            transform-origin: center center;
            will-change: transform;
        }

        .card:hover {
            transform: translateY(-8px) scale(1.01);
            box-shadow: var(--shadow-colored);
            border-color: rgba(139, 92, 246, 0.2);
        }

        .card:active {
            transform: scale(0.98) translateY(2px);
            transition: transform 0.1s ease;
        }

        /* Image Container */
        .destination-image-container {
            width: 100%;
            height: 280px;
            overflow: hidden;
            display: flex;
            align-items: center;
            justify-content: center;
            background: linear-gradient(45deg, var(--gray-light), var(--secondary));
            position: relative;
        }

        .destination-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
            filter: brightness(1.1) contrast(1.05);
            transition: var(--transition);
        }

        /* Enhanced Card Body */
        .card-body {
            padding: 2rem;
            position: relative;
            z-index: 2;
        }

        .card-title {
            font-size: 1.25rem;
            font-weight: 700;
            color: var(--text-color);
            margin-bottom: 1rem;
            background: linear-gradient(135deg, var(--primary), var(--accent));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            line-height: 1.3;
            letter-spacing: -0.025em;
        }

        .card-body p {
            margin-bottom: 0.75rem;
            font-size: 0.9rem;
            color: var(--text-muted);
            font-weight: 500;
        }

        .card-body p strong {
            color: var(--text-color);
            font-weight: 600;
        }

        /* Enhanced Separator */
        .spacing-separator {
            border: none;
            height: 2px;
            background: linear-gradient(90deg, transparent, var(--border-color), transparent);
            margin: 3rem 0;
            border-radius: 1px;
        }

        /* Enhanced Form Controls */
        .form-control {
            background: var(--glassmorphism);
            backdrop-filter: blur(12px);
            color: var(--text-color);
            border: 2px solid rgba(139, 92, 246, 0.1);
            border-radius: 16px;
            padding: 12px 16px;
            transition: var(--transition);
            font-size: 14px;
            font-weight: 500;
            min-width: 200px;
        }

        .form-control:focus {
            border-color: var(--primary);
            box-shadow: 0 0 0 4px rgba(139, 92, 246, 0.1);
            background: var(--glassmorphism);
            color: var(--text-color);
            outline: none;
        }

        /* Enhanced Alert */
        .alert-info {
            background: linear-gradient(135deg, rgba(59, 130, 246, 0.1), rgba(139, 92, 246, 0.1));
            border: 1px solid rgba(59, 130, 246, 0.2);
            color: var(--text-color);
            border-radius: var(--border-radius);
            padding: 1.5rem;
            font-weight: 500;
            backdrop-filter: blur(12px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.06);
        }

        /* Enhanced Daily Expense Styling */
        .daily-expense {
            background: var(--expense-bg);
            backdrop-filter: blur(12px);
            border: 2px solid var(--expense-border);
            border-radius: var(--border-radius);
            padding: 1.5rem;
            margin: 1.5rem 0;
            text-align: center;
            position: relative;
            overflow: hidden;
            box-shadow: 0 12px 30px rgba(139, 92, 246, 0.2);
        }

        .daily-expense:hover {
            transform: scale(1.02);
            box-shadow: 0 15px 35px rgba(139, 92, 246, 0.3);
        }

        .expense-label {
            font-size: 0.8rem;
            font-weight: 700;
            color: var(--primary);
            margin-bottom: 0.5rem;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .expense-amount {
            font-size: 1.6rem;
            font-weight: 800;
            color: var(--text-color);
            line-height: 1.2;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            letter-spacing: -0.025em;
        }

        .expense-median {
            font-size: 0.85rem;
            color: var(--text-muted);
            margin-top: 0.5rem;
            font-style: italic;
        }

        .no-expense {
            color: var(--text-muted);
            font-style: italic;
            font-size: 0.9rem;
        }

        .destination-description {
            color: var(--text-muted);
            font-size: 0.9rem;
            line-height: 1.6;
            margin-top: 1rem;
            font-weight: 400;
        }

        /* Enhanced Card Footer */
        .card-footer {
            padding: 2rem;
            background: transparent !important;
            border: none !important;
            position: relative;
            z-index: 2;
        }

        .d-grid {
            display: grid;
            gap: 0.75rem;
        }

        /* Responsive Design */
        @@media (max-width: 576px) {
            .container {
                padding-left: 1rem;
                padding-right: 1rem;
            }

            .card-body {
                padding: 1.5rem;
            }

            .daily-expense {
                padding: 1.25rem;
                margin: 1rem 0;
            }

            .btn {
                padding: 10px 20px;
                font-size: 13px;
            }

            form.form-inline {
                padding: 2rem;
                flex-direction: column;
            }

            .d-flex.justify-content-end.mb-5 {
                top: 10px;
                right: 10px;
            }

            body {
                padding-top: 80px;
            }
        }

        /* Modern Scrollbar */
        ::-webkit-scrollbar {
            width: 8px;
        }

        ::-webkit-scrollbar-track {
            background: rgba(0, 0, 0, 0.1);
            border-radius: 4px;
        }

        ::-webkit-scrollbar-thumb {
            background: var(--primary);
            border-radius: 4px;
            transition: background 0.3s ease;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: var(--primary-dark);
        }

        /* Accessibility */
        html {
            scroll-behavior: smooth;
        }

        *:focus {
            outline: 2px solid var(--primary);
            outline-offset: 2px;
        }

        /* Performance Optimizations */
        @@media (prefers-reduced-motion: reduce) {
            * {
                animation-duration: 0.01ms !important;
                animation-iteration-count: 1 !important;
                transition-duration: 0.01ms !important;
            }
        }

        /* Typography */
        h1, h2, h3, h4, h5, h6 {
            font-weight: 700;
            letter-spacing: -0.025em;
            line-height: 1.2;
        }

        p {
            font-weight: 400;
            line-height: 1.6;
        }

        /* Bootstrap grid helpers */
        .row {
            display: flex;
            flex-wrap: wrap;
            margin-right: -0.75rem;
            margin-left: -0.75rem;
        }

        .col-md-8 {
            flex: 0 0 66.666667%;
            max-width: 66.666667%;
            position: relative;
            width: 100%;
            padding-right: 0.75rem;
            padding-left: 0.75rem;
        }

        .mx-auto {
            margin-right: auto !important;
            margin-left: auto !important;
        }

        .mb-4 {
            margin-bottom: 1.5rem !important;
        }

        .mb-3 {
            margin-bottom: 1rem !important;
        }

        .mr-3 {
            margin-right: 1rem !important;
        }

        .mr-2 {
            margin-right: 0.5rem !important;
        }

        .me-1 {
            margin-right: 0.25rem !important;
        }

        .me-2 {
            margin-right: 0.5rem !important;
        }

        .mt-4 {
            margin-top: 1.5rem !important;
        }

        .py-4 {
            padding-top: 1.5rem !important;
            padding-bottom: 1.5rem !important;
        }

        .py-lg-5 {
            padding-top: 3rem !important;
            padding-bottom: 3rem !important;
        }

        .text-center {
            text-align: center !important;
        }

        .justify-content-center {
            justify-content: center !important;
        }

        .h-100 {
            height: 100% !important;
        }

        .shadow {
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;
        }

        .bg-transparent {
            background-color: transparent !important;
        }

        .border-0 {
            border: 0 !important;
        }

        .pt-0 {
            padding-top: 0 !important;
        }

        .d-none {
            display: none !important;
        }

        .gap-2 {
            gap: 0.5rem !important;
        }

        .gap-3 {
            gap: 1rem !important;
        }

        @@media (max-width: 767.98px) {
            .col-md-8 {
                flex: 0 0 100%;
                max-width: 100%;
            }
        }
    </style>
    <meta charset="UTF-8" />
    <title>Bootstrap Icons Test</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />
</head>
<body>
    <div class="d-flex justify-content-end mb-5">
        <div class="d-flex gap-3">
            <button class="btn btn-outline-primary" id="themeToggle">
                <i class="bi bi-sun-fill d-none"></i>
                <i class="bi bi-moon-fill"></i>
            </button>
        </div>
    </div>
    <div class="container py-4 py-lg-5">

        <!-- Filters and Search -->
        <div class="row mb-4">
            <div class="col-md-8 mx-auto">
                <form method="get" class="form-inline justify-content-center">
                    <div class="form-group mr-3 mb-3">
                        <label for="categoryId" class="mr-2">@(lang == "en" ? "Category:" : "Kategoria:")</label>
                        @Html.DropDownList("categoryId", (SelectList)ViewBag.CategoryList, lang == "en" ? "All" : "Të gjitha", new { @class = "form-control", onchange = "this.form.submit()" })
                    </div>
                    <div class="form-group mr-3 mb-3">
                        <input type="text" name="search" class="form-control" placeholder="@(lang == "en" ? "Search by name..." : "Kërko sipas emrit...")" value="@Request.QueryString["search"]" />
                    </div>
                    <input type="hidden" name="sortOrder" value="@ViewBag.SortOrder" />
                    <input type="hidden" name="language" value="@lang" />
                    <button type="submit" class="btn btn-primary mb-3">@(lang == "en" ? "Search" : "Kërko")</button>
                </form>
            </div>
        </div>

        <div class="spacing-separator mt-4 mb-4"></div>

        @if (!Model.Any())
        {
            <div class="alert alert-info text-center">
                @(lang == "en" ? "No results found for your search." : "Nuk ka rezultate për kërkimin tuaj.")
            </div>
        }
        else
        {
            <!-- Card Grid for destinations -->
            <div class="destinations-row" id="destinationsGrid">
                @foreach (var item in Model)
                {
                <div class="card h-100 shadow" data-id="@item.Id">
                    <div class="destination-image-container">
                        @if (!string.IsNullOrEmpty(item.ImagePath))
                        {
                            <img src="@Url.Content(item.ImagePath)" class="card-img-top destination-image" alt="@item.Name" />
                        }
                        else
                        {
                            <img src="@Url.Content("~/Content/Images/no-image.png")" class="card-img-top destination-image" alt="No Image" />
                        }
                    </div>
                    <div class="card-body">
                        <h5 class="card-title">@item.Name</h5>
                        <p><strong>@(lang == "en" ? "Region:" : "Rajoni:")</strong> @item.Region</p>
                        <p><strong>@(lang == "en" ? "Category:" : "Kategoria:")</strong> @(item.Category != null ? item.Category.Name : lang == "en" ? "No category" : "Pa kategori")</p>

                        <!-- Daily Expense Section -->
                        <div class="daily-expense">
                            <div class="expense-label">
                                <i class="bi bi-wallet2 me-1"></i>
                                @(lang == "en" ? "Daily Budget" : "Buxheti Ditor")
                            </div>
                            @if (!string.IsNullOrEmpty(item.DailyExpenseRange))
                            {
                                <div class="expense-amount">@item.DailyExpenseRange</div>
                                if (item.MedianDailyExpenseAL.HasValue)
                                {
                                    <div class="expense-median">
                                        @(lang == "en" ? "Median:" : "Mesatarja:") @item.MedianDailyExpenseAL.Value.ToString("N0") ALL
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="no-expense">@(lang == "en" ? "Contact for pricing" : "Kontaktoni për çmime")</div>
                            }
                        </div>

                        <p class="destination-description">
                            @if (item.Description != null && item.Description.Length > 150)
                            {
                                @(item.Description.Substring(0, 150) + "...")
                            }
                            else
                            {
                                @item.Description
                            }
                        </p>
                    </div>
                    <div class="card-footer bg-transparent border-0 pt-0">
                        <div class="d-grid gap-2">
                            <a href="@Url.Action("DestinationPdf", "Home", new { id = item.Id, language = lang })" class="btn btn-primary" target="_blank" rel="noopener">
                                <i class="bi bi-file-earmark-pdf me-2"></i> @(lang == "en" ? "Download PDF" : "Shkarko si PDF")
                            </a>
                            <a href="@Url.Action("ReservationForm", "Home", new { id = item.Id, language = lang })" class="btn btn-outline-primary">
                                <i class="bi bi-calendar-check me-2"></i> @(lang == "en" ? "Make Reservation" : "Bëj Rezervim")
                            </a>
                        </div>
                    </div>
                </div>
                }
            </div>
        }
    </div>

    <script>
        // Theme toggle functionality (unchanged)
        document.addEventListener('DOMContentLoaded', function () {
            const themeToggle = document.getElementById('themeToggle');
            const sunIcon = themeToggle.querySelector('.bi-sun-fill');
            const moonIcon = themeToggle.querySelector('.bi-moon-fill');

            const savedTheme = localStorage.getItem('theme');
            const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;

            if (savedTheme === 'dark' || (!savedTheme && systemPrefersDark)) {
                document.documentElement.setAttribute('data-bs-theme', 'dark');
                sunIcon.classList.remove('d-none');
                moonIcon.classList.add('d-none');
            } else {
                document.documentElement.setAttribute('data-bs-theme', 'light');
                moonIcon.classList.remove('d-none');
                sunIcon.classList.add('d-none');
            }

            themeToggle.addEventListener('click', function () {
                const currentTheme = document.documentElement.getAttribute('data-bs-theme');
                if (currentTheme === 'light') {
                    document.documentElement.setAttribute('data-bs-theme', 'dark');
                    localStorage.setItem('theme', 'dark');
                    sunIcon.classList.remove('d-none');
                    moonIcon.classList.add('d-none');
                } else {
                    document.documentElement.setAttribute('data-bs-theme', 'light');
                    localStorage.setItem('theme', 'light');
                    moonIcon.classList.remove('d-none');
                    sunIcon.classList.add('d-none');
                }
            });

            window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {
                if (!localStorage.getItem('theme')) {
                    if (e.matches) {
                        document.documentElement.setAttribute('data-bs-theme', 'dark');
                        sunIcon.classList.remove('d-none');
                        moonIcon.classList.add('d-none');
                    } else {
                        document.documentElement.setAttribute('data-bs-theme', 'light');
                        moonIcon.classList.remove('d-none');
                        sunIcon.classList.add('d-none');
                    }
                }
            });
        });
    </script>
</body>
</html>